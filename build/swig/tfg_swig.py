# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tfg_swig', [dirname(__file__)])
        except ImportError:
            import _tfg_swig
            return _tfg_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_tfg_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tfg_swig = swig_import_helper()
    del swig_import_helper
else:
    import _tfg_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> gr::high_res_timer_type"""
  return _tfg_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
  return _tfg_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> gr::high_res_timer_type"""
  return _tfg_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> gr::high_res_timer_type"""
  return _tfg_swig.high_res_timer_epoch()
class imprimir_mensajes(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::imprimir_mensajes.

    To avoid accidental use of raw pointers, tfg::imprimir_mensajes's constructor is in a private implementation class. tfg::imprimir_mensajes::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> imprimir_mensajes_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::imprimir_mensajes.

        To avoid accidental use of raw pointers, tfg::imprimir_mensajes's constructor is in a private implementation class. tfg::imprimir_mensajes::make is the public interface for creating new instances.
        """
        return _tfg_swig.imprimir_mensajes_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_imprimir_mensajes
    __del__ = lambda self : None;
imprimir_mensajes_swigregister = _tfg_swig.imprimir_mensajes_swigregister
imprimir_mensajes_swigregister(imprimir_mensajes)

def imprimir_mensajes_make():
  """
    imprimir_mensajes_make() -> imprimir_mensajes_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::imprimir_mensajes.

    To avoid accidental use of raw pointers, tfg::imprimir_mensajes's constructor is in a private implementation class. tfg::imprimir_mensajes::make is the public interface for creating new instances.
    """
  return _tfg_swig.imprimir_mensajes_make()

class imprimir_mensajes_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::imprimir_mensajes)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::imprimir_mensajes)> self) -> imprimir_mensajes_sptr
        __init__(boost::shared_ptr<(gr::tfg::imprimir_mensajes)> self, imprimir_mensajes p) -> imprimir_mensajes_sptr
        """
        this = _tfg_swig.new_imprimir_mensajes_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(imprimir_mensajes_sptr self) -> imprimir_mensajes"""
        return _tfg_swig.imprimir_mensajes_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_imprimir_mensajes_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(imprimir_mensajes_sptr self) -> imprimir_mensajes_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::imprimir_mensajes.

        To avoid accidental use of raw pointers, tfg::imprimir_mensajes's constructor is in a private implementation class. tfg::imprimir_mensajes::make is the public interface for creating new instances.
        """
        return _tfg_swig.imprimir_mensajes_sptr_make(self)

    def history(self):
        """history(imprimir_mensajes_sptr self) -> unsigned int"""
        return _tfg_swig.imprimir_mensajes_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(imprimir_mensajes_sptr self, int which, int delay)
        declare_sample_delay(imprimir_mensajes_sptr self, unsigned int delay)
        """
        return _tfg_swig.imprimir_mensajes_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(imprimir_mensajes_sptr self, int which) -> unsigned int"""
        return _tfg_swig.imprimir_mensajes_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(imprimir_mensajes_sptr self) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(imprimir_mensajes_sptr self) -> double"""
        return _tfg_swig.imprimir_mensajes_sptr_relative_rate(self)

    def start(self):
        """start(imprimir_mensajes_sptr self) -> bool"""
        return _tfg_swig.imprimir_mensajes_sptr_start(self)

    def stop(self):
        """stop(imprimir_mensajes_sptr self) -> bool"""
        return _tfg_swig.imprimir_mensajes_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(imprimir_mensajes_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.imprimir_mensajes_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(imprimir_mensajes_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.imprimir_mensajes_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(imprimir_mensajes_sptr self) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(imprimir_mensajes_sptr self, int m)"""
        return _tfg_swig.imprimir_mensajes_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(imprimir_mensajes_sptr self)"""
        return _tfg_swig.imprimir_mensajes_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(imprimir_mensajes_sptr self) -> bool"""
        return _tfg_swig.imprimir_mensajes_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(imprimir_mensajes_sptr self, int m)"""
        return _tfg_swig.imprimir_mensajes_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(imprimir_mensajes_sptr self) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(imprimir_mensajes_sptr self, int i) -> long"""
        return _tfg_swig.imprimir_mensajes_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(imprimir_mensajes_sptr self, long max_output_buffer)
        set_max_output_buffer(imprimir_mensajes_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.imprimir_mensajes_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(imprimir_mensajes_sptr self, int i) -> long"""
        return _tfg_swig.imprimir_mensajes_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(imprimir_mensajes_sptr self, long min_output_buffer)
        set_min_output_buffer(imprimir_mensajes_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.imprimir_mensajes_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(imprimir_mensajes_sptr self, int which) -> float
        pc_input_buffers_full(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(imprimir_mensajes_sptr self, int which) -> float
        pc_input_buffers_full_avg(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(imprimir_mensajes_sptr self, int which) -> float
        pc_input_buffers_full_var(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(imprimir_mensajes_sptr self, int which) -> float
        pc_output_buffers_full(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(imprimir_mensajes_sptr self, int which) -> float
        pc_output_buffers_full_avg(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(imprimir_mensajes_sptr self, int which) -> float
        pc_output_buffers_full_var(imprimir_mensajes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_mensajes_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(imprimir_mensajes_sptr self) -> float"""
        return _tfg_swig.imprimir_mensajes_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(imprimir_mensajes_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.imprimir_mensajes_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(imprimir_mensajes_sptr self)"""
        return _tfg_swig.imprimir_mensajes_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(imprimir_mensajes_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.imprimir_mensajes_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(imprimir_mensajes_sptr self) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(imprimir_mensajes_sptr self) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(imprimir_mensajes_sptr self, int priority) -> int"""
        return _tfg_swig.imprimir_mensajes_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(imprimir_mensajes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_mensajes_sptr_name(self)

    def symbol_name(self):
        """symbol_name(imprimir_mensajes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_mensajes_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(imprimir_mensajes_sptr self) -> io_signature_sptr"""
        return _tfg_swig.imprimir_mensajes_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(imprimir_mensajes_sptr self) -> io_signature_sptr"""
        return _tfg_swig.imprimir_mensajes_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(imprimir_mensajes_sptr self) -> long"""
        return _tfg_swig.imprimir_mensajes_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(imprimir_mensajes_sptr self) -> basic_block_sptr"""
        return _tfg_swig.imprimir_mensajes_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(imprimir_mensajes_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.imprimir_mensajes_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(imprimir_mensajes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_mensajes_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(imprimir_mensajes_sptr self, std::string name)"""
        return _tfg_swig.imprimir_mensajes_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(imprimir_mensajes_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.imprimir_mensajes_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(imprimir_mensajes_sptr self) -> swig_int_ptr"""
        return _tfg_swig.imprimir_mensajes_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(imprimir_mensajes_sptr self) -> swig_int_ptr"""
        return _tfg_swig.imprimir_mensajes_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(imprimir_mensajes_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.imprimir_mensajes_sptr_message_subscribers(self, *args, **kwargs)

imprimir_mensajes_sptr_swigregister = _tfg_swig.imprimir_mensajes_sptr_swigregister
imprimir_mensajes_sptr_swigregister(imprimir_mensajes_sptr)

imprimir_mensajes_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
imprimir_mensajes = imprimir_mensajes.make;

class repetidor_caracteres(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::repetidor_caracteres.

    To avoid accidental use of raw pointers, tfg::repetidor_caracteres's constructor is in a private implementation class. tfg::repetidor_caracteres::make is the public interface for creating new instances.

    Args:
        repeticiones : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int repeticiones) -> repetidor_caracteres_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::repetidor_caracteres.

        To avoid accidental use of raw pointers, tfg::repetidor_caracteres's constructor is in a private implementation class. tfg::repetidor_caracteres::make is the public interface for creating new instances.

        Args:
            repeticiones : 
        """
        return _tfg_swig.repetidor_caracteres_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_repetidor_caracteres
    __del__ = lambda self : None;
repetidor_caracteres_swigregister = _tfg_swig.repetidor_caracteres_swigregister
repetidor_caracteres_swigregister(repetidor_caracteres)

def repetidor_caracteres_make(*args, **kwargs):
  """
    repetidor_caracteres_make(int repeticiones) -> repetidor_caracteres_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::repetidor_caracteres.

    To avoid accidental use of raw pointers, tfg::repetidor_caracteres's constructor is in a private implementation class. tfg::repetidor_caracteres::make is the public interface for creating new instances.

    Args:
        repeticiones : 
    """
  return _tfg_swig.repetidor_caracteres_make(*args, **kwargs)

class repetidor_caracteres_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::repetidor_caracteres)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::repetidor_caracteres)> self) -> repetidor_caracteres_sptr
        __init__(boost::shared_ptr<(gr::tfg::repetidor_caracteres)> self, repetidor_caracteres p) -> repetidor_caracteres_sptr
        """
        this = _tfg_swig.new_repetidor_caracteres_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(repetidor_caracteres_sptr self) -> repetidor_caracteres"""
        return _tfg_swig.repetidor_caracteres_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_repetidor_caracteres_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(repetidor_caracteres_sptr self, int repeticiones) -> repetidor_caracteres_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::repetidor_caracteres.

        To avoid accidental use of raw pointers, tfg::repetidor_caracteres's constructor is in a private implementation class. tfg::repetidor_caracteres::make is the public interface for creating new instances.

        Args:
            repeticiones : 
        """
        return _tfg_swig.repetidor_caracteres_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(repetidor_caracteres_sptr self) -> unsigned int"""
        return _tfg_swig.repetidor_caracteres_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(repetidor_caracteres_sptr self, int which, int delay)
        declare_sample_delay(repetidor_caracteres_sptr self, unsigned int delay)
        """
        return _tfg_swig.repetidor_caracteres_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(repetidor_caracteres_sptr self, int which) -> unsigned int"""
        return _tfg_swig.repetidor_caracteres_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(repetidor_caracteres_sptr self) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(repetidor_caracteres_sptr self) -> double"""
        return _tfg_swig.repetidor_caracteres_sptr_relative_rate(self)

    def start(self):
        """start(repetidor_caracteres_sptr self) -> bool"""
        return _tfg_swig.repetidor_caracteres_sptr_start(self)

    def stop(self):
        """stop(repetidor_caracteres_sptr self) -> bool"""
        return _tfg_swig.repetidor_caracteres_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(repetidor_caracteres_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.repetidor_caracteres_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(repetidor_caracteres_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.repetidor_caracteres_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(repetidor_caracteres_sptr self) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(repetidor_caracteres_sptr self, int m)"""
        return _tfg_swig.repetidor_caracteres_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(repetidor_caracteres_sptr self)"""
        return _tfg_swig.repetidor_caracteres_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(repetidor_caracteres_sptr self) -> bool"""
        return _tfg_swig.repetidor_caracteres_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(repetidor_caracteres_sptr self, int m)"""
        return _tfg_swig.repetidor_caracteres_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(repetidor_caracteres_sptr self) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(repetidor_caracteres_sptr self, int i) -> long"""
        return _tfg_swig.repetidor_caracteres_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(repetidor_caracteres_sptr self, long max_output_buffer)
        set_max_output_buffer(repetidor_caracteres_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.repetidor_caracteres_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(repetidor_caracteres_sptr self, int i) -> long"""
        return _tfg_swig.repetidor_caracteres_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(repetidor_caracteres_sptr self, long min_output_buffer)
        set_min_output_buffer(repetidor_caracteres_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.repetidor_caracteres_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(repetidor_caracteres_sptr self, int which) -> float
        pc_input_buffers_full(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(repetidor_caracteres_sptr self, int which) -> float
        pc_input_buffers_full_avg(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(repetidor_caracteres_sptr self, int which) -> float
        pc_input_buffers_full_var(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(repetidor_caracteres_sptr self, int which) -> float
        pc_output_buffers_full(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(repetidor_caracteres_sptr self, int which) -> float
        pc_output_buffers_full_avg(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(repetidor_caracteres_sptr self, int which) -> float
        pc_output_buffers_full_var(repetidor_caracteres_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.repetidor_caracteres_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(repetidor_caracteres_sptr self) -> float"""
        return _tfg_swig.repetidor_caracteres_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(repetidor_caracteres_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.repetidor_caracteres_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(repetidor_caracteres_sptr self)"""
        return _tfg_swig.repetidor_caracteres_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(repetidor_caracteres_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.repetidor_caracteres_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(repetidor_caracteres_sptr self) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(repetidor_caracteres_sptr self) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(repetidor_caracteres_sptr self, int priority) -> int"""
        return _tfg_swig.repetidor_caracteres_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(repetidor_caracteres_sptr self) -> std::string"""
        return _tfg_swig.repetidor_caracteres_sptr_name(self)

    def symbol_name(self):
        """symbol_name(repetidor_caracteres_sptr self) -> std::string"""
        return _tfg_swig.repetidor_caracteres_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(repetidor_caracteres_sptr self) -> io_signature_sptr"""
        return _tfg_swig.repetidor_caracteres_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(repetidor_caracteres_sptr self) -> io_signature_sptr"""
        return _tfg_swig.repetidor_caracteres_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(repetidor_caracteres_sptr self) -> long"""
        return _tfg_swig.repetidor_caracteres_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(repetidor_caracteres_sptr self) -> basic_block_sptr"""
        return _tfg_swig.repetidor_caracteres_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(repetidor_caracteres_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.repetidor_caracteres_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(repetidor_caracteres_sptr self) -> std::string"""
        return _tfg_swig.repetidor_caracteres_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(repetidor_caracteres_sptr self, std::string name)"""
        return _tfg_swig.repetidor_caracteres_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(repetidor_caracteres_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.repetidor_caracteres_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(repetidor_caracteres_sptr self) -> swig_int_ptr"""
        return _tfg_swig.repetidor_caracteres_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(repetidor_caracteres_sptr self) -> swig_int_ptr"""
        return _tfg_swig.repetidor_caracteres_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(repetidor_caracteres_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.repetidor_caracteres_sptr_message_subscribers(self, *args, **kwargs)

repetidor_caracteres_sptr_swigregister = _tfg_swig.repetidor_caracteres_sptr_swigregister
repetidor_caracteres_sptr_swigregister(repetidor_caracteres_sptr)

repetidor_caracteres_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
repetidor_caracteres = repetidor_caracteres.make;

class mensaje_a_mayusculas(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::mensaje_a_mayusculas.

    To avoid accidental use of raw pointers, tfg::mensaje_a_mayusculas's constructor is in a private implementation class. tfg::mensaje_a_mayusculas::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> mensaje_a_mayusculas_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::mensaje_a_mayusculas.

        To avoid accidental use of raw pointers, tfg::mensaje_a_mayusculas's constructor is in a private implementation class. tfg::mensaje_a_mayusculas::make is the public interface for creating new instances.
        """
        return _tfg_swig.mensaje_a_mayusculas_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_mensaje_a_mayusculas
    __del__ = lambda self : None;
mensaje_a_mayusculas_swigregister = _tfg_swig.mensaje_a_mayusculas_swigregister
mensaje_a_mayusculas_swigregister(mensaje_a_mayusculas)

def mensaje_a_mayusculas_make():
  """
    mensaje_a_mayusculas_make() -> mensaje_a_mayusculas_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::mensaje_a_mayusculas.

    To avoid accidental use of raw pointers, tfg::mensaje_a_mayusculas's constructor is in a private implementation class. tfg::mensaje_a_mayusculas::make is the public interface for creating new instances.
    """
  return _tfg_swig.mensaje_a_mayusculas_make()

class mensaje_a_mayusculas_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::mensaje_a_mayusculas)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::mensaje_a_mayusculas)> self) -> mensaje_a_mayusculas_sptr
        __init__(boost::shared_ptr<(gr::tfg::mensaje_a_mayusculas)> self, mensaje_a_mayusculas p) -> mensaje_a_mayusculas_sptr
        """
        this = _tfg_swig.new_mensaje_a_mayusculas_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(mensaje_a_mayusculas_sptr self) -> mensaje_a_mayusculas"""
        return _tfg_swig.mensaje_a_mayusculas_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_mensaje_a_mayusculas_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(mensaje_a_mayusculas_sptr self) -> mensaje_a_mayusculas_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::mensaje_a_mayusculas.

        To avoid accidental use of raw pointers, tfg::mensaje_a_mayusculas's constructor is in a private implementation class. tfg::mensaje_a_mayusculas::make is the public interface for creating new instances.
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_make(self)

    def history(self):
        """history(mensaje_a_mayusculas_sptr self) -> unsigned int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(mensaje_a_mayusculas_sptr self, int which, int delay)
        declare_sample_delay(mensaje_a_mayusculas_sptr self, unsigned int delay)
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(mensaje_a_mayusculas_sptr self, int which) -> unsigned int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(mensaje_a_mayusculas_sptr self) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(mensaje_a_mayusculas_sptr self) -> double"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_relative_rate(self)

    def start(self):
        """start(mensaje_a_mayusculas_sptr self) -> bool"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_start(self)

    def stop(self):
        """stop(mensaje_a_mayusculas_sptr self) -> bool"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(mensaje_a_mayusculas_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(mensaje_a_mayusculas_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(mensaje_a_mayusculas_sptr self) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(mensaje_a_mayusculas_sptr self, int m)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(mensaje_a_mayusculas_sptr self)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(mensaje_a_mayusculas_sptr self) -> bool"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(mensaje_a_mayusculas_sptr self, int m)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(mensaje_a_mayusculas_sptr self) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(mensaje_a_mayusculas_sptr self, int i) -> long"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(mensaje_a_mayusculas_sptr self, long max_output_buffer)
        set_max_output_buffer(mensaje_a_mayusculas_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(mensaje_a_mayusculas_sptr self, int i) -> long"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(mensaje_a_mayusculas_sptr self, long min_output_buffer)
        set_min_output_buffer(mensaje_a_mayusculas_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_input_buffers_full(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_input_buffers_full_avg(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_input_buffers_full_var(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_output_buffers_full(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_output_buffers_full_avg(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(mensaje_a_mayusculas_sptr self, int which) -> float
        pc_output_buffers_full_var(mensaje_a_mayusculas_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(mensaje_a_mayusculas_sptr self) -> float"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(mensaje_a_mayusculas_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(mensaje_a_mayusculas_sptr self)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(mensaje_a_mayusculas_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(mensaje_a_mayusculas_sptr self) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(mensaje_a_mayusculas_sptr self) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(mensaje_a_mayusculas_sptr self, int priority) -> int"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(mensaje_a_mayusculas_sptr self) -> std::string"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_name(self)

    def symbol_name(self):
        """symbol_name(mensaje_a_mayusculas_sptr self) -> std::string"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(mensaje_a_mayusculas_sptr self) -> io_signature_sptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(mensaje_a_mayusculas_sptr self) -> io_signature_sptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(mensaje_a_mayusculas_sptr self) -> long"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(mensaje_a_mayusculas_sptr self) -> basic_block_sptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(mensaje_a_mayusculas_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(mensaje_a_mayusculas_sptr self) -> std::string"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(mensaje_a_mayusculas_sptr self, std::string name)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(mensaje_a_mayusculas_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.mensaje_a_mayusculas_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(mensaje_a_mayusculas_sptr self) -> swig_int_ptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(mensaje_a_mayusculas_sptr self) -> swig_int_ptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(mensaje_a_mayusculas_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.mensaje_a_mayusculas_sptr_message_subscribers(self, *args, **kwargs)

mensaje_a_mayusculas_sptr_swigregister = _tfg_swig.mensaje_a_mayusculas_sptr_swigregister
mensaje_a_mayusculas_sptr_swigregister(mensaje_a_mayusculas_sptr)

mensaje_a_mayusculas_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
mensaje_a_mayusculas = mensaje_a_mayusculas.make;

class imprimir_bytes(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::imprimir_bytes.

    To avoid accidental use of raw pointers, tfg::imprimir_bytes's constructor is in a private implementation class. tfg::imprimir_bytes::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> imprimir_bytes_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::imprimir_bytes.

        To avoid accidental use of raw pointers, tfg::imprimir_bytes's constructor is in a private implementation class. tfg::imprimir_bytes::make is the public interface for creating new instances.
        """
        return _tfg_swig.imprimir_bytes_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_imprimir_bytes
    __del__ = lambda self : None;
imprimir_bytes_swigregister = _tfg_swig.imprimir_bytes_swigregister
imprimir_bytes_swigregister(imprimir_bytes)

def imprimir_bytes_make():
  """
    imprimir_bytes_make() -> imprimir_bytes_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::imprimir_bytes.

    To avoid accidental use of raw pointers, tfg::imprimir_bytes's constructor is in a private implementation class. tfg::imprimir_bytes::make is the public interface for creating new instances.
    """
  return _tfg_swig.imprimir_bytes_make()

class imprimir_bytes_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::imprimir_bytes)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::imprimir_bytes)> self) -> imprimir_bytes_sptr
        __init__(boost::shared_ptr<(gr::tfg::imprimir_bytes)> self, imprimir_bytes p) -> imprimir_bytes_sptr
        """
        this = _tfg_swig.new_imprimir_bytes_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(imprimir_bytes_sptr self) -> imprimir_bytes"""
        return _tfg_swig.imprimir_bytes_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_imprimir_bytes_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(imprimir_bytes_sptr self) -> imprimir_bytes_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::imprimir_bytes.

        To avoid accidental use of raw pointers, tfg::imprimir_bytes's constructor is in a private implementation class. tfg::imprimir_bytes::make is the public interface for creating new instances.
        """
        return _tfg_swig.imprimir_bytes_sptr_make(self)

    def history(self):
        """history(imprimir_bytes_sptr self) -> unsigned int"""
        return _tfg_swig.imprimir_bytes_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(imprimir_bytes_sptr self, int which, int delay)
        declare_sample_delay(imprimir_bytes_sptr self, unsigned int delay)
        """
        return _tfg_swig.imprimir_bytes_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(imprimir_bytes_sptr self, int which) -> unsigned int"""
        return _tfg_swig.imprimir_bytes_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(imprimir_bytes_sptr self) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(imprimir_bytes_sptr self) -> double"""
        return _tfg_swig.imprimir_bytes_sptr_relative_rate(self)

    def start(self):
        """start(imprimir_bytes_sptr self) -> bool"""
        return _tfg_swig.imprimir_bytes_sptr_start(self)

    def stop(self):
        """stop(imprimir_bytes_sptr self) -> bool"""
        return _tfg_swig.imprimir_bytes_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(imprimir_bytes_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.imprimir_bytes_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(imprimir_bytes_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.imprimir_bytes_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(imprimir_bytes_sptr self) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(imprimir_bytes_sptr self, int m)"""
        return _tfg_swig.imprimir_bytes_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(imprimir_bytes_sptr self)"""
        return _tfg_swig.imprimir_bytes_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(imprimir_bytes_sptr self) -> bool"""
        return _tfg_swig.imprimir_bytes_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(imprimir_bytes_sptr self, int m)"""
        return _tfg_swig.imprimir_bytes_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(imprimir_bytes_sptr self) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(imprimir_bytes_sptr self, int i) -> long"""
        return _tfg_swig.imprimir_bytes_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(imprimir_bytes_sptr self, long max_output_buffer)
        set_max_output_buffer(imprimir_bytes_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.imprimir_bytes_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(imprimir_bytes_sptr self, int i) -> long"""
        return _tfg_swig.imprimir_bytes_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(imprimir_bytes_sptr self, long min_output_buffer)
        set_min_output_buffer(imprimir_bytes_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.imprimir_bytes_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(imprimir_bytes_sptr self, int which) -> float
        pc_input_buffers_full(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(imprimir_bytes_sptr self, int which) -> float
        pc_input_buffers_full_avg(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(imprimir_bytes_sptr self, int which) -> float
        pc_input_buffers_full_var(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(imprimir_bytes_sptr self, int which) -> float
        pc_output_buffers_full(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(imprimir_bytes_sptr self, int which) -> float
        pc_output_buffers_full_avg(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(imprimir_bytes_sptr self, int which) -> float
        pc_output_buffers_full_var(imprimir_bytes_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.imprimir_bytes_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(imprimir_bytes_sptr self) -> float"""
        return _tfg_swig.imprimir_bytes_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(imprimir_bytes_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.imprimir_bytes_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(imprimir_bytes_sptr self)"""
        return _tfg_swig.imprimir_bytes_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(imprimir_bytes_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.imprimir_bytes_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(imprimir_bytes_sptr self) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(imprimir_bytes_sptr self) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(imprimir_bytes_sptr self, int priority) -> int"""
        return _tfg_swig.imprimir_bytes_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(imprimir_bytes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_bytes_sptr_name(self)

    def symbol_name(self):
        """symbol_name(imprimir_bytes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_bytes_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(imprimir_bytes_sptr self) -> io_signature_sptr"""
        return _tfg_swig.imprimir_bytes_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(imprimir_bytes_sptr self) -> io_signature_sptr"""
        return _tfg_swig.imprimir_bytes_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(imprimir_bytes_sptr self) -> long"""
        return _tfg_swig.imprimir_bytes_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(imprimir_bytes_sptr self) -> basic_block_sptr"""
        return _tfg_swig.imprimir_bytes_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(imprimir_bytes_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.imprimir_bytes_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(imprimir_bytes_sptr self) -> std::string"""
        return _tfg_swig.imprimir_bytes_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(imprimir_bytes_sptr self, std::string name)"""
        return _tfg_swig.imprimir_bytes_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(imprimir_bytes_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.imprimir_bytes_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(imprimir_bytes_sptr self) -> swig_int_ptr"""
        return _tfg_swig.imprimir_bytes_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(imprimir_bytes_sptr self) -> swig_int_ptr"""
        return _tfg_swig.imprimir_bytes_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(imprimir_bytes_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.imprimir_bytes_sptr_message_subscribers(self, *args, **kwargs)

imprimir_bytes_sptr_swigregister = _tfg_swig.imprimir_bytes_sptr_swigregister
imprimir_bytes_sptr_swigregister(imprimir_bytes_sptr)

imprimir_bytes_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
imprimir_bytes = imprimir_bytes.make;

class test_nwk(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_nwk.

    To avoid accidental use of raw pointers, tfg::test_nwk's constructor is in a private implementation class. tfg::test_nwk::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> test_nwk_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_nwk.

        To avoid accidental use of raw pointers, tfg::test_nwk's constructor is in a private implementation class. tfg::test_nwk::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_nwk_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_test_nwk
    __del__ = lambda self : None;
test_nwk_swigregister = _tfg_swig.test_nwk_swigregister
test_nwk_swigregister(test_nwk)

def test_nwk_make():
  """
    test_nwk_make() -> test_nwk_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_nwk.

    To avoid accidental use of raw pointers, tfg::test_nwk's constructor is in a private implementation class. tfg::test_nwk::make is the public interface for creating new instances.
    """
  return _tfg_swig.test_nwk_make()

class test_nwk_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::test_nwk)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::test_nwk)> self) -> test_nwk_sptr
        __init__(boost::shared_ptr<(gr::tfg::test_nwk)> self, test_nwk p) -> test_nwk_sptr
        """
        this = _tfg_swig.new_test_nwk_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(test_nwk_sptr self) -> test_nwk"""
        return _tfg_swig.test_nwk_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_test_nwk_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(test_nwk_sptr self) -> test_nwk_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_nwk.

        To avoid accidental use of raw pointers, tfg::test_nwk's constructor is in a private implementation class. tfg::test_nwk::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_nwk_sptr_make(self)

    def history(self):
        """history(test_nwk_sptr self) -> unsigned int"""
        return _tfg_swig.test_nwk_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(test_nwk_sptr self, int which, int delay)
        declare_sample_delay(test_nwk_sptr self, unsigned int delay)
        """
        return _tfg_swig.test_nwk_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(test_nwk_sptr self, int which) -> unsigned int"""
        return _tfg_swig.test_nwk_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(test_nwk_sptr self) -> int"""
        return _tfg_swig.test_nwk_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(test_nwk_sptr self) -> double"""
        return _tfg_swig.test_nwk_sptr_relative_rate(self)

    def start(self):
        """start(test_nwk_sptr self) -> bool"""
        return _tfg_swig.test_nwk_sptr_start(self)

    def stop(self):
        """stop(test_nwk_sptr self) -> bool"""
        return _tfg_swig.test_nwk_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(test_nwk_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.test_nwk_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(test_nwk_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.test_nwk_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(test_nwk_sptr self) -> int"""
        return _tfg_swig.test_nwk_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(test_nwk_sptr self, int m)"""
        return _tfg_swig.test_nwk_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(test_nwk_sptr self)"""
        return _tfg_swig.test_nwk_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(test_nwk_sptr self) -> bool"""
        return _tfg_swig.test_nwk_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(test_nwk_sptr self, int m)"""
        return _tfg_swig.test_nwk_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(test_nwk_sptr self) -> int"""
        return _tfg_swig.test_nwk_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(test_nwk_sptr self, int i) -> long"""
        return _tfg_swig.test_nwk_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(test_nwk_sptr self, long max_output_buffer)
        set_max_output_buffer(test_nwk_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.test_nwk_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(test_nwk_sptr self, int i) -> long"""
        return _tfg_swig.test_nwk_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(test_nwk_sptr self, long min_output_buffer)
        set_min_output_buffer(test_nwk_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.test_nwk_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(test_nwk_sptr self, int which) -> float
        pc_input_buffers_full(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(test_nwk_sptr self, int which) -> float
        pc_input_buffers_full_avg(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(test_nwk_sptr self, int which) -> float
        pc_input_buffers_full_var(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(test_nwk_sptr self, int which) -> float
        pc_output_buffers_full(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(test_nwk_sptr self, int which) -> float
        pc_output_buffers_full_avg(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(test_nwk_sptr self, int which) -> float
        pc_output_buffers_full_var(test_nwk_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_nwk_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(test_nwk_sptr self) -> float"""
        return _tfg_swig.test_nwk_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(test_nwk_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.test_nwk_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(test_nwk_sptr self)"""
        return _tfg_swig.test_nwk_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(test_nwk_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.test_nwk_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(test_nwk_sptr self) -> int"""
        return _tfg_swig.test_nwk_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(test_nwk_sptr self) -> int"""
        return _tfg_swig.test_nwk_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(test_nwk_sptr self, int priority) -> int"""
        return _tfg_swig.test_nwk_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(test_nwk_sptr self) -> std::string"""
        return _tfg_swig.test_nwk_sptr_name(self)

    def symbol_name(self):
        """symbol_name(test_nwk_sptr self) -> std::string"""
        return _tfg_swig.test_nwk_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(test_nwk_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_nwk_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(test_nwk_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_nwk_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(test_nwk_sptr self) -> long"""
        return _tfg_swig.test_nwk_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(test_nwk_sptr self) -> basic_block_sptr"""
        return _tfg_swig.test_nwk_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(test_nwk_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.test_nwk_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(test_nwk_sptr self) -> std::string"""
        return _tfg_swig.test_nwk_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(test_nwk_sptr self, std::string name)"""
        return _tfg_swig.test_nwk_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(test_nwk_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.test_nwk_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(test_nwk_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_nwk_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(test_nwk_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_nwk_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(test_nwk_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.test_nwk_sptr_message_subscribers(self, *args, **kwargs)

test_nwk_sptr_swigregister = _tfg_swig.test_nwk_sptr_swigregister
test_nwk_sptr_swigregister(test_nwk_sptr)

test_nwk_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
test_nwk = test_nwk.make;

class test_aps(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_aps.

    To avoid accidental use of raw pointers, tfg::test_aps's constructor is in a private implementation class. tfg::test_aps::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> test_aps_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_aps.

        To avoid accidental use of raw pointers, tfg::test_aps's constructor is in a private implementation class. tfg::test_aps::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_aps_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_test_aps
    __del__ = lambda self : None;
test_aps_swigregister = _tfg_swig.test_aps_swigregister
test_aps_swigregister(test_aps)

def test_aps_make():
  """
    test_aps_make() -> test_aps_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_aps.

    To avoid accidental use of raw pointers, tfg::test_aps's constructor is in a private implementation class. tfg::test_aps::make is the public interface for creating new instances.
    """
  return _tfg_swig.test_aps_make()

class test_aps_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::test_aps)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::test_aps)> self) -> test_aps_sptr
        __init__(boost::shared_ptr<(gr::tfg::test_aps)> self, test_aps p) -> test_aps_sptr
        """
        this = _tfg_swig.new_test_aps_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(test_aps_sptr self) -> test_aps"""
        return _tfg_swig.test_aps_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_test_aps_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(test_aps_sptr self) -> test_aps_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_aps.

        To avoid accidental use of raw pointers, tfg::test_aps's constructor is in a private implementation class. tfg::test_aps::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_aps_sptr_make(self)

    def history(self):
        """history(test_aps_sptr self) -> unsigned int"""
        return _tfg_swig.test_aps_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(test_aps_sptr self, int which, int delay)
        declare_sample_delay(test_aps_sptr self, unsigned int delay)
        """
        return _tfg_swig.test_aps_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(test_aps_sptr self, int which) -> unsigned int"""
        return _tfg_swig.test_aps_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(test_aps_sptr self) -> int"""
        return _tfg_swig.test_aps_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(test_aps_sptr self) -> double"""
        return _tfg_swig.test_aps_sptr_relative_rate(self)

    def start(self):
        """start(test_aps_sptr self) -> bool"""
        return _tfg_swig.test_aps_sptr_start(self)

    def stop(self):
        """stop(test_aps_sptr self) -> bool"""
        return _tfg_swig.test_aps_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(test_aps_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.test_aps_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(test_aps_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.test_aps_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(test_aps_sptr self) -> int"""
        return _tfg_swig.test_aps_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(test_aps_sptr self, int m)"""
        return _tfg_swig.test_aps_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(test_aps_sptr self)"""
        return _tfg_swig.test_aps_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(test_aps_sptr self) -> bool"""
        return _tfg_swig.test_aps_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(test_aps_sptr self, int m)"""
        return _tfg_swig.test_aps_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(test_aps_sptr self) -> int"""
        return _tfg_swig.test_aps_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(test_aps_sptr self, int i) -> long"""
        return _tfg_swig.test_aps_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(test_aps_sptr self, long max_output_buffer)
        set_max_output_buffer(test_aps_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.test_aps_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(test_aps_sptr self, int i) -> long"""
        return _tfg_swig.test_aps_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(test_aps_sptr self, long min_output_buffer)
        set_min_output_buffer(test_aps_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.test_aps_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(test_aps_sptr self, int which) -> float
        pc_input_buffers_full(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(test_aps_sptr self, int which) -> float
        pc_input_buffers_full_avg(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(test_aps_sptr self, int which) -> float
        pc_input_buffers_full_var(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(test_aps_sptr self, int which) -> float
        pc_output_buffers_full(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(test_aps_sptr self, int which) -> float
        pc_output_buffers_full_avg(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(test_aps_sptr self, int which) -> float
        pc_output_buffers_full_var(test_aps_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_aps_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(test_aps_sptr self) -> float"""
        return _tfg_swig.test_aps_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(test_aps_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.test_aps_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(test_aps_sptr self)"""
        return _tfg_swig.test_aps_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(test_aps_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.test_aps_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(test_aps_sptr self) -> int"""
        return _tfg_swig.test_aps_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(test_aps_sptr self) -> int"""
        return _tfg_swig.test_aps_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(test_aps_sptr self, int priority) -> int"""
        return _tfg_swig.test_aps_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(test_aps_sptr self) -> std::string"""
        return _tfg_swig.test_aps_sptr_name(self)

    def symbol_name(self):
        """symbol_name(test_aps_sptr self) -> std::string"""
        return _tfg_swig.test_aps_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(test_aps_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_aps_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(test_aps_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_aps_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(test_aps_sptr self) -> long"""
        return _tfg_swig.test_aps_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(test_aps_sptr self) -> basic_block_sptr"""
        return _tfg_swig.test_aps_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(test_aps_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.test_aps_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(test_aps_sptr self) -> std::string"""
        return _tfg_swig.test_aps_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(test_aps_sptr self, std::string name)"""
        return _tfg_swig.test_aps_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(test_aps_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.test_aps_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(test_aps_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_aps_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(test_aps_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_aps_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(test_aps_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.test_aps_sptr_message_subscribers(self, *args, **kwargs)

test_aps_sptr_swigregister = _tfg_swig.test_aps_sptr_swigregister
test_aps_sptr_swigregister(test_aps_sptr)

test_aps_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
test_aps = test_aps.make;

class APS_stack(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::APS_stack.

    To avoid accidental use of raw pointers, tfg::APS_stack's constructor is in a private implementation class. tfg::APS_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(bool debugInput, bool debugOutput) -> APS_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::APS_stack.

        To avoid accidental use of raw pointers, tfg::APS_stack's constructor is in a private implementation class. tfg::APS_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.APS_stack_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_APS_stack
    __del__ = lambda self : None;
APS_stack_swigregister = _tfg_swig.APS_stack_swigregister
APS_stack_swigregister(APS_stack)

def APS_stack_make(*args, **kwargs):
  """
    APS_stack_make(bool debugInput, bool debugOutput) -> APS_stack_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::APS_stack.

    To avoid accidental use of raw pointers, tfg::APS_stack's constructor is in a private implementation class. tfg::APS_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
  return _tfg_swig.APS_stack_make(*args, **kwargs)

class APS_stack_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::APS_stack)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::APS_stack)> self) -> APS_stack_sptr
        __init__(boost::shared_ptr<(gr::tfg::APS_stack)> self, APS_stack p) -> APS_stack_sptr
        """
        this = _tfg_swig.new_APS_stack_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(APS_stack_sptr self) -> APS_stack"""
        return _tfg_swig.APS_stack_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_APS_stack_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(APS_stack_sptr self, bool debugInput, bool debugOutput) -> APS_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::APS_stack.

        To avoid accidental use of raw pointers, tfg::APS_stack's constructor is in a private implementation class. tfg::APS_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.APS_stack_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(APS_stack_sptr self) -> unsigned int"""
        return _tfg_swig.APS_stack_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(APS_stack_sptr self, int which, int delay)
        declare_sample_delay(APS_stack_sptr self, unsigned int delay)
        """
        return _tfg_swig.APS_stack_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(APS_stack_sptr self, int which) -> unsigned int"""
        return _tfg_swig.APS_stack_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(APS_stack_sptr self) -> int"""
        return _tfg_swig.APS_stack_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(APS_stack_sptr self) -> double"""
        return _tfg_swig.APS_stack_sptr_relative_rate(self)

    def start(self):
        """start(APS_stack_sptr self) -> bool"""
        return _tfg_swig.APS_stack_sptr_start(self)

    def stop(self):
        """stop(APS_stack_sptr self) -> bool"""
        return _tfg_swig.APS_stack_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(APS_stack_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.APS_stack_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(APS_stack_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.APS_stack_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(APS_stack_sptr self) -> int"""
        return _tfg_swig.APS_stack_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(APS_stack_sptr self, int m)"""
        return _tfg_swig.APS_stack_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(APS_stack_sptr self)"""
        return _tfg_swig.APS_stack_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(APS_stack_sptr self) -> bool"""
        return _tfg_swig.APS_stack_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(APS_stack_sptr self, int m)"""
        return _tfg_swig.APS_stack_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(APS_stack_sptr self) -> int"""
        return _tfg_swig.APS_stack_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(APS_stack_sptr self, int i) -> long"""
        return _tfg_swig.APS_stack_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(APS_stack_sptr self, long max_output_buffer)
        set_max_output_buffer(APS_stack_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.APS_stack_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(APS_stack_sptr self, int i) -> long"""
        return _tfg_swig.APS_stack_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(APS_stack_sptr self, long min_output_buffer)
        set_min_output_buffer(APS_stack_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.APS_stack_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(APS_stack_sptr self, int which) -> float
        pc_input_buffers_full(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(APS_stack_sptr self, int which) -> float
        pc_input_buffers_full_avg(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(APS_stack_sptr self, int which) -> float
        pc_input_buffers_full_var(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(APS_stack_sptr self, int which) -> float
        pc_output_buffers_full(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(APS_stack_sptr self, int which) -> float
        pc_output_buffers_full_avg(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(APS_stack_sptr self, int which) -> float
        pc_output_buffers_full_var(APS_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.APS_stack_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(APS_stack_sptr self) -> float"""
        return _tfg_swig.APS_stack_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(APS_stack_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.APS_stack_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(APS_stack_sptr self)"""
        return _tfg_swig.APS_stack_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(APS_stack_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.APS_stack_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(APS_stack_sptr self) -> int"""
        return _tfg_swig.APS_stack_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(APS_stack_sptr self) -> int"""
        return _tfg_swig.APS_stack_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(APS_stack_sptr self, int priority) -> int"""
        return _tfg_swig.APS_stack_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(APS_stack_sptr self) -> std::string"""
        return _tfg_swig.APS_stack_sptr_name(self)

    def symbol_name(self):
        """symbol_name(APS_stack_sptr self) -> std::string"""
        return _tfg_swig.APS_stack_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(APS_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.APS_stack_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(APS_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.APS_stack_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(APS_stack_sptr self) -> long"""
        return _tfg_swig.APS_stack_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(APS_stack_sptr self) -> basic_block_sptr"""
        return _tfg_swig.APS_stack_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(APS_stack_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.APS_stack_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(APS_stack_sptr self) -> std::string"""
        return _tfg_swig.APS_stack_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(APS_stack_sptr self, std::string name)"""
        return _tfg_swig.APS_stack_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(APS_stack_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.APS_stack_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(APS_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.APS_stack_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(APS_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.APS_stack_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(APS_stack_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.APS_stack_sptr_message_subscribers(self, *args, **kwargs)

APS_stack_sptr_swigregister = _tfg_swig.APS_stack_sptr_swigregister
APS_stack_sptr_swigregister(APS_stack_sptr)

APS_stack_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
APS_stack = APS_stack.make;

class NWK_stack(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::NWK_stack.

    To avoid accidental use of raw pointers, tfg::NWK_stack's constructor is in a private implementation class. tfg::NWK_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(bool debugInput, bool debugOutput) -> NWK_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::NWK_stack.

        To avoid accidental use of raw pointers, tfg::NWK_stack's constructor is in a private implementation class. tfg::NWK_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.NWK_stack_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_NWK_stack
    __del__ = lambda self : None;
NWK_stack_swigregister = _tfg_swig.NWK_stack_swigregister
NWK_stack_swigregister(NWK_stack)

def NWK_stack_make(*args, **kwargs):
  """
    NWK_stack_make(bool debugInput, bool debugOutput) -> NWK_stack_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::NWK_stack.

    To avoid accidental use of raw pointers, tfg::NWK_stack's constructor is in a private implementation class. tfg::NWK_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
  return _tfg_swig.NWK_stack_make(*args, **kwargs)

class NWK_stack_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::NWK_stack)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::NWK_stack)> self) -> NWK_stack_sptr
        __init__(boost::shared_ptr<(gr::tfg::NWK_stack)> self, NWK_stack p) -> NWK_stack_sptr
        """
        this = _tfg_swig.new_NWK_stack_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(NWK_stack_sptr self) -> NWK_stack"""
        return _tfg_swig.NWK_stack_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_NWK_stack_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(NWK_stack_sptr self, bool debugInput, bool debugOutput) -> NWK_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::NWK_stack.

        To avoid accidental use of raw pointers, tfg::NWK_stack's constructor is in a private implementation class. tfg::NWK_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.NWK_stack_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(NWK_stack_sptr self) -> unsigned int"""
        return _tfg_swig.NWK_stack_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(NWK_stack_sptr self, int which, int delay)
        declare_sample_delay(NWK_stack_sptr self, unsigned int delay)
        """
        return _tfg_swig.NWK_stack_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(NWK_stack_sptr self, int which) -> unsigned int"""
        return _tfg_swig.NWK_stack_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(NWK_stack_sptr self) -> int"""
        return _tfg_swig.NWK_stack_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(NWK_stack_sptr self) -> double"""
        return _tfg_swig.NWK_stack_sptr_relative_rate(self)

    def start(self):
        """start(NWK_stack_sptr self) -> bool"""
        return _tfg_swig.NWK_stack_sptr_start(self)

    def stop(self):
        """stop(NWK_stack_sptr self) -> bool"""
        return _tfg_swig.NWK_stack_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(NWK_stack_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.NWK_stack_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(NWK_stack_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.NWK_stack_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(NWK_stack_sptr self) -> int"""
        return _tfg_swig.NWK_stack_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(NWK_stack_sptr self, int m)"""
        return _tfg_swig.NWK_stack_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(NWK_stack_sptr self)"""
        return _tfg_swig.NWK_stack_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(NWK_stack_sptr self) -> bool"""
        return _tfg_swig.NWK_stack_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(NWK_stack_sptr self, int m)"""
        return _tfg_swig.NWK_stack_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(NWK_stack_sptr self) -> int"""
        return _tfg_swig.NWK_stack_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(NWK_stack_sptr self, int i) -> long"""
        return _tfg_swig.NWK_stack_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(NWK_stack_sptr self, long max_output_buffer)
        set_max_output_buffer(NWK_stack_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.NWK_stack_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(NWK_stack_sptr self, int i) -> long"""
        return _tfg_swig.NWK_stack_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(NWK_stack_sptr self, long min_output_buffer)
        set_min_output_buffer(NWK_stack_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.NWK_stack_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(NWK_stack_sptr self, int which) -> float
        pc_input_buffers_full(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(NWK_stack_sptr self, int which) -> float
        pc_input_buffers_full_avg(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(NWK_stack_sptr self, int which) -> float
        pc_input_buffers_full_var(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(NWK_stack_sptr self, int which) -> float
        pc_output_buffers_full(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(NWK_stack_sptr self, int which) -> float
        pc_output_buffers_full_avg(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(NWK_stack_sptr self, int which) -> float
        pc_output_buffers_full_var(NWK_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.NWK_stack_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(NWK_stack_sptr self) -> float"""
        return _tfg_swig.NWK_stack_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(NWK_stack_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.NWK_stack_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(NWK_stack_sptr self)"""
        return _tfg_swig.NWK_stack_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(NWK_stack_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.NWK_stack_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(NWK_stack_sptr self) -> int"""
        return _tfg_swig.NWK_stack_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(NWK_stack_sptr self) -> int"""
        return _tfg_swig.NWK_stack_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(NWK_stack_sptr self, int priority) -> int"""
        return _tfg_swig.NWK_stack_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(NWK_stack_sptr self) -> std::string"""
        return _tfg_swig.NWK_stack_sptr_name(self)

    def symbol_name(self):
        """symbol_name(NWK_stack_sptr self) -> std::string"""
        return _tfg_swig.NWK_stack_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(NWK_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.NWK_stack_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(NWK_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.NWK_stack_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(NWK_stack_sptr self) -> long"""
        return _tfg_swig.NWK_stack_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(NWK_stack_sptr self) -> basic_block_sptr"""
        return _tfg_swig.NWK_stack_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(NWK_stack_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.NWK_stack_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(NWK_stack_sptr self) -> std::string"""
        return _tfg_swig.NWK_stack_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(NWK_stack_sptr self, std::string name)"""
        return _tfg_swig.NWK_stack_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(NWK_stack_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.NWK_stack_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(NWK_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.NWK_stack_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(NWK_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.NWK_stack_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(NWK_stack_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.NWK_stack_sptr_message_subscribers(self, *args, **kwargs)

NWK_stack_sptr_swigregister = _tfg_swig.NWK_stack_sptr_swigregister
NWK_stack_sptr_swigregister(NWK_stack_sptr)

NWK_stack_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
NWK_stack = NWK_stack.make;

class translation_block(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::translation_block.

    To avoid accidental use of raw pointers, tfg::translation_block's constructor is in a private implementation class. tfg::translation_block::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> translation_block_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::translation_block.

        To avoid accidental use of raw pointers, tfg::translation_block's constructor is in a private implementation class. tfg::translation_block::make is the public interface for creating new instances.
        """
        return _tfg_swig.translation_block_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_translation_block
    __del__ = lambda self : None;
translation_block_swigregister = _tfg_swig.translation_block_swigregister
translation_block_swigregister(translation_block)

def translation_block_make():
  """
    translation_block_make() -> translation_block_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::translation_block.

    To avoid accidental use of raw pointers, tfg::translation_block's constructor is in a private implementation class. tfg::translation_block::make is the public interface for creating new instances.
    """
  return _tfg_swig.translation_block_make()

class translation_block_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::translation_block)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::translation_block)> self) -> translation_block_sptr
        __init__(boost::shared_ptr<(gr::tfg::translation_block)> self, translation_block p) -> translation_block_sptr
        """
        this = _tfg_swig.new_translation_block_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(translation_block_sptr self) -> translation_block"""
        return _tfg_swig.translation_block_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_translation_block_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(translation_block_sptr self) -> translation_block_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::translation_block.

        To avoid accidental use of raw pointers, tfg::translation_block's constructor is in a private implementation class. tfg::translation_block::make is the public interface for creating new instances.
        """
        return _tfg_swig.translation_block_sptr_make(self)

    def history(self):
        """history(translation_block_sptr self) -> unsigned int"""
        return _tfg_swig.translation_block_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(translation_block_sptr self, int which, int delay)
        declare_sample_delay(translation_block_sptr self, unsigned int delay)
        """
        return _tfg_swig.translation_block_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(translation_block_sptr self, int which) -> unsigned int"""
        return _tfg_swig.translation_block_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(translation_block_sptr self) -> int"""
        return _tfg_swig.translation_block_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(translation_block_sptr self) -> double"""
        return _tfg_swig.translation_block_sptr_relative_rate(self)

    def start(self):
        """start(translation_block_sptr self) -> bool"""
        return _tfg_swig.translation_block_sptr_start(self)

    def stop(self):
        """stop(translation_block_sptr self) -> bool"""
        return _tfg_swig.translation_block_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(translation_block_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.translation_block_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(translation_block_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.translation_block_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(translation_block_sptr self) -> int"""
        return _tfg_swig.translation_block_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(translation_block_sptr self, int m)"""
        return _tfg_swig.translation_block_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(translation_block_sptr self)"""
        return _tfg_swig.translation_block_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(translation_block_sptr self) -> bool"""
        return _tfg_swig.translation_block_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(translation_block_sptr self, int m)"""
        return _tfg_swig.translation_block_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(translation_block_sptr self) -> int"""
        return _tfg_swig.translation_block_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(translation_block_sptr self, int i) -> long"""
        return _tfg_swig.translation_block_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(translation_block_sptr self, long max_output_buffer)
        set_max_output_buffer(translation_block_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.translation_block_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(translation_block_sptr self, int i) -> long"""
        return _tfg_swig.translation_block_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(translation_block_sptr self, long min_output_buffer)
        set_min_output_buffer(translation_block_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.translation_block_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(translation_block_sptr self, int which) -> float
        pc_input_buffers_full(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(translation_block_sptr self, int which) -> float
        pc_input_buffers_full_avg(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(translation_block_sptr self, int which) -> float
        pc_input_buffers_full_var(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(translation_block_sptr self, int which) -> float
        pc_output_buffers_full(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(translation_block_sptr self, int which) -> float
        pc_output_buffers_full_avg(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(translation_block_sptr self, int which) -> float
        pc_output_buffers_full_var(translation_block_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.translation_block_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(translation_block_sptr self) -> float"""
        return _tfg_swig.translation_block_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(translation_block_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.translation_block_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(translation_block_sptr self)"""
        return _tfg_swig.translation_block_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(translation_block_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.translation_block_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(translation_block_sptr self) -> int"""
        return _tfg_swig.translation_block_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(translation_block_sptr self) -> int"""
        return _tfg_swig.translation_block_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(translation_block_sptr self, int priority) -> int"""
        return _tfg_swig.translation_block_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(translation_block_sptr self) -> std::string"""
        return _tfg_swig.translation_block_sptr_name(self)

    def symbol_name(self):
        """symbol_name(translation_block_sptr self) -> std::string"""
        return _tfg_swig.translation_block_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(translation_block_sptr self) -> io_signature_sptr"""
        return _tfg_swig.translation_block_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(translation_block_sptr self) -> io_signature_sptr"""
        return _tfg_swig.translation_block_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(translation_block_sptr self) -> long"""
        return _tfg_swig.translation_block_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(translation_block_sptr self) -> basic_block_sptr"""
        return _tfg_swig.translation_block_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(translation_block_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.translation_block_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(translation_block_sptr self) -> std::string"""
        return _tfg_swig.translation_block_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(translation_block_sptr self, std::string name)"""
        return _tfg_swig.translation_block_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(translation_block_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.translation_block_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(translation_block_sptr self) -> swig_int_ptr"""
        return _tfg_swig.translation_block_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(translation_block_sptr self) -> swig_int_ptr"""
        return _tfg_swig.translation_block_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(translation_block_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.translation_block_sptr_message_subscribers(self, *args, **kwargs)

translation_block_sptr_swigregister = _tfg_swig.translation_block_sptr_swigregister
translation_block_sptr_swigregister(translation_block_sptr)

translation_block_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
translation_block = translation_block.make;

class Aplication(object):
    """
    <+description of block+>

    Constructor Specific Documentation:


    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def make():
        """
        make() -> Aplication_sptr

        <+description of block+>

        Constructor Specific Documentation:


        """
        return _tfg_swig.Aplication_make()

    make = staticmethod(make)
    def send(self):
        """send(Aplication self)"""
        return _tfg_swig.Aplication_send(self)

    def setPayload(self, *args, **kwargs):
        """setPayload(Aplication self, std::string payload)"""
        return _tfg_swig.Aplication_setPayload(self, *args, **kwargs)

    def setMAC_frameType(self, *args, **kwargs):
        """setMAC_frameType(Aplication self, int MAC_frameType)"""
        return _tfg_swig.Aplication_setMAC_frameType(self, *args, **kwargs)

    def setMAC_security(self, *args, **kwargs):
        """setMAC_security(Aplication self, bool MAC_security)"""
        return _tfg_swig.Aplication_setMAC_security(self, *args, **kwargs)

    def setMAC_framePending(self, *args, **kwargs):
        """setMAC_framePending(Aplication self, bool MAC_framePending)"""
        return _tfg_swig.Aplication_setMAC_framePending(self, *args, **kwargs)

    def setMAC_ackRequest(self, *args, **kwargs):
        """setMAC_ackRequest(Aplication self, bool MAC_ackRequest)"""
        return _tfg_swig.Aplication_setMAC_ackRequest(self, *args, **kwargs)

    def setMAC_intraPAN(self, *args, **kwargs):
        """setMAC_intraPAN(Aplication self, bool MAC_intraPAN)"""
        return _tfg_swig.Aplication_setMAC_intraPAN(self, *args, **kwargs)

    def setMAC_destMode(self, *args, **kwargs):
        """setMAC_destMode(Aplication self, int MAC_destMode)"""
        return _tfg_swig.Aplication_setMAC_destMode(self, *args, **kwargs)

    def setMAC_srcMode(self, *args, **kwargs):
        """setMAC_srcMode(Aplication self, int MAC_srcMode)"""
        return _tfg_swig.Aplication_setMAC_srcMode(self, *args, **kwargs)

    def setMAC_destPAN(self, *args, **kwargs):
        """setMAC_destPAN(Aplication self, std::string MAC_destPAN)"""
        return _tfg_swig.Aplication_setMAC_destPAN(self, *args, **kwargs)

    def setMAC_destAddress(self, *args, **kwargs):
        """setMAC_destAddress(Aplication self, std::string MAC_destAddress)"""
        return _tfg_swig.Aplication_setMAC_destAddress(self, *args, **kwargs)

    def setMAC_srcPAN(self, *args, **kwargs):
        """setMAC_srcPAN(Aplication self, std::string MAC_srcPAN)"""
        return _tfg_swig.Aplication_setMAC_srcPAN(self, *args, **kwargs)

    def setMAC_srcAddress(self, *args, **kwargs):
        """setMAC_srcAddress(Aplication self, std::string MAC_srcAddress)"""
        return _tfg_swig.Aplication_setMAC_srcAddress(self, *args, **kwargs)

    def setNWK_frameType(self, *args, **kwargs):
        """setNWK_frameType(Aplication self, int NWK_frameType)"""
        return _tfg_swig.Aplication_setNWK_frameType(self, *args, **kwargs)

    def setNWK_discoverRoute(self, *args, **kwargs):
        """setNWK_discoverRoute(Aplication self, bool NWK_discoverRoute)"""
        return _tfg_swig.Aplication_setNWK_discoverRoute(self, *args, **kwargs)

    def setNWK_multicastFlag(self, *args, **kwargs):
        """setNWK_multicastFlag(Aplication self, bool NWK_multicastFlag)"""
        return _tfg_swig.Aplication_setNWK_multicastFlag(self, *args, **kwargs)

    def setNWK_security(self, *args, **kwargs):
        """setNWK_security(Aplication self, bool NWK_security)"""
        return _tfg_swig.Aplication_setNWK_security(self, *args, **kwargs)

    def setNWK_sourceRoute(self, *args, **kwargs):
        """setNWK_sourceRoute(Aplication self, bool NWK_sourceRoute)"""
        return _tfg_swig.Aplication_setNWK_sourceRoute(self, *args, **kwargs)

    def setNWK_hasDestIEEE(self, *args, **kwargs):
        """setNWK_hasDestIEEE(Aplication self, bool NWK_hasDestIEEE)"""
        return _tfg_swig.Aplication_setNWK_hasDestIEEE(self, *args, **kwargs)

    def setNWK_hasSrcIEEE(self, *args, **kwargs):
        """setNWK_hasSrcIEEE(Aplication self, bool NWK_hasSrcIEEE)"""
        return _tfg_swig.Aplication_setNWK_hasSrcIEEE(self, *args, **kwargs)

    def setNWK_destinationAdd(self, *args, **kwargs):
        """setNWK_destinationAdd(Aplication self, std::string NWK_destinationAdd)"""
        return _tfg_swig.Aplication_setNWK_destinationAdd(self, *args, **kwargs)

    def setNWK_sourceAdd(self, *args, **kwargs):
        """setNWK_sourceAdd(Aplication self, std::string NWK_sourceAdd)"""
        return _tfg_swig.Aplication_setNWK_sourceAdd(self, *args, **kwargs)

    def setNWK_radius(self, *args, **kwargs):
        """setNWK_radius(Aplication self, std::string NWK_radius)"""
        return _tfg_swig.Aplication_setNWK_radius(self, *args, **kwargs)

    def setNWK_destinationIEEE(self, *args, **kwargs):
        """setNWK_destinationIEEE(Aplication self, std::string NWK_destinationIEEE)"""
        return _tfg_swig.Aplication_setNWK_destinationIEEE(self, *args, **kwargs)

    def setNWK_sourceIEEE(self, *args, **kwargs):
        """setNWK_sourceIEEE(Aplication self, std::string NWK_sourceIEEE)"""
        return _tfg_swig.Aplication_setNWK_sourceIEEE(self, *args, **kwargs)

    def setNWK_multicastMember(self, *args, **kwargs):
        """setNWK_multicastMember(Aplication self, bool NWK_multicastMember)"""
        return _tfg_swig.Aplication_setNWK_multicastMember(self, *args, **kwargs)

    def setNWK_multicastRadius(self, *args, **kwargs):
        """setNWK_multicastRadius(Aplication self, std::string NWK_multicastRadius)"""
        return _tfg_swig.Aplication_setNWK_multicastRadius(self, *args, **kwargs)

    def setNWK_multicastMaxRadius(self, *args, **kwargs):
        """setNWK_multicastMaxRadius(Aplication self, std::string NWK_multicastMaxRadius)"""
        return _tfg_swig.Aplication_setNWK_multicastMaxRadius(self, *args, **kwargs)

    def setNWK_SourceRoute(self, *args, **kwargs):
        """setNWK_SourceRoute(Aplication self, std::string sourceRoute)"""
        return _tfg_swig.Aplication_setNWK_SourceRoute(self, *args, **kwargs)

    def setAPS_frameType(self, *args, **kwargs):
        """setAPS_frameType(Aplication self, int APS_frameType)"""
        return _tfg_swig.Aplication_setAPS_frameType(self, *args, **kwargs)

    def setAPS_deliveryMode(self, *args, **kwargs):
        """setAPS_deliveryMode(Aplication self, int APS_deliveryMode)"""
        return _tfg_swig.Aplication_setAPS_deliveryMode(self, *args, **kwargs)

    def setAPS_ackFormat(self, *args, **kwargs):
        """setAPS_ackFormat(Aplication self, bool APS_ackFormat)"""
        return _tfg_swig.Aplication_setAPS_ackFormat(self, *args, **kwargs)

    def setAPS_security(self, *args, **kwargs):
        """setAPS_security(Aplication self, bool APS_security)"""
        return _tfg_swig.Aplication_setAPS_security(self, *args, **kwargs)

    def setAPS_ackRequest(self, *args, **kwargs):
        """setAPS_ackRequest(Aplication self, bool APS_ackRequest)"""
        return _tfg_swig.Aplication_setAPS_ackRequest(self, *args, **kwargs)

    def setAPS_extHeaderPresent(self, *args, **kwargs):
        """setAPS_extHeaderPresent(Aplication self, bool APS_extHeaderPresent)"""
        return _tfg_swig.Aplication_setAPS_extHeaderPresent(self, *args, **kwargs)

    def setAPS_destinationEndpoint(self, *args, **kwargs):
        """setAPS_destinationEndpoint(Aplication self, std::string APS_destinationEndpoint)"""
        return _tfg_swig.Aplication_setAPS_destinationEndpoint(self, *args, **kwargs)

    def setAPS_groupAdd(self, *args, **kwargs):
        """setAPS_groupAdd(Aplication self, std::string APS_groupAdd)"""
        return _tfg_swig.Aplication_setAPS_groupAdd(self, *args, **kwargs)

    def setAPS_clusterID(self, *args, **kwargs):
        """setAPS_clusterID(Aplication self, std::string APS_clusterID)"""
        return _tfg_swig.Aplication_setAPS_clusterID(self, *args, **kwargs)

    def setAPS_profileID(self, *args, **kwargs):
        """setAPS_profileID(Aplication self, std::string APS_profileID)"""
        return _tfg_swig.Aplication_setAPS_profileID(self, *args, **kwargs)

    def setAPS_sourceEndpoint(self, *args, **kwargs):
        """setAPS_sourceEndpoint(Aplication self, std::string APS_sourceEndpoint)"""
        return _tfg_swig.Aplication_setAPS_sourceEndpoint(self, *args, **kwargs)

    def setAPS_fragmentation(self, *args, **kwargs):
        """setAPS_fragmentation(Aplication self, int APS_fragmentation)"""
        return _tfg_swig.Aplication_setAPS_fragmentation(self, *args, **kwargs)

    def setAPS_blockNumber(self, *args, **kwargs):
        """setAPS_blockNumber(Aplication self, std::string APS_blockNumber)"""
        return _tfg_swig.Aplication_setAPS_blockNumber(self, *args, **kwargs)

    def setAPS_ackBitfield(self, *args, **kwargs):
        """setAPS_ackBitfield(Aplication self, std::string APS_ackBitfield)"""
        return _tfg_swig.Aplication_setAPS_ackBitfield(self, *args, **kwargs)

    def setAPS_commandID(self, *args, **kwargs):
        """setAPS_commandID(Aplication self, std::string APS_commandID)"""
        return _tfg_swig.Aplication_setAPS_commandID(self, *args, **kwargs)

    def toggleRedLed(self):
        """toggleRedLed(Aplication self)"""
        return _tfg_swig.Aplication_toggleRedLed(self)

    def toggleGreenLed(self):
        """toggleGreenLed(Aplication self)"""
        return _tfg_swig.Aplication_toggleGreenLed(self)

    def toggleYellowLed(self):
        """toggleYellowLed(Aplication self)"""
        return _tfg_swig.Aplication_toggleYellowLed(self)

    __swig_destroy__ = _tfg_swig.delete_Aplication
    __del__ = lambda self : None;
Aplication_swigregister = _tfg_swig.Aplication_swigregister
Aplication_swigregister(Aplication)

def Aplication_make():
  """
    Aplication_make() -> Aplication_sptr

    <+description of block+>

    Constructor Specific Documentation:


    """
  return _tfg_swig.Aplication_make()

class Aplication_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::Aplication)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::Aplication)> self) -> Aplication_sptr
        __init__(boost::shared_ptr<(gr::tfg::Aplication)> self, Aplication p) -> Aplication_sptr
        """
        this = _tfg_swig.new_Aplication_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Aplication_sptr self) -> Aplication"""
        return _tfg_swig.Aplication_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_Aplication_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(Aplication_sptr self) -> Aplication_sptr

        <+description of block+>

        Constructor Specific Documentation:


        """
        return _tfg_swig.Aplication_sptr_make(self)

    def send(self):
        """send(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_send(self)

    def setPayload(self, *args, **kwargs):
        """setPayload(Aplication_sptr self, std::string payload)"""
        return _tfg_swig.Aplication_sptr_setPayload(self, *args, **kwargs)

    def setMAC_frameType(self, *args, **kwargs):
        """setMAC_frameType(Aplication_sptr self, int MAC_frameType)"""
        return _tfg_swig.Aplication_sptr_setMAC_frameType(self, *args, **kwargs)

    def setMAC_security(self, *args, **kwargs):
        """setMAC_security(Aplication_sptr self, bool MAC_security)"""
        return _tfg_swig.Aplication_sptr_setMAC_security(self, *args, **kwargs)

    def setMAC_framePending(self, *args, **kwargs):
        """setMAC_framePending(Aplication_sptr self, bool MAC_framePending)"""
        return _tfg_swig.Aplication_sptr_setMAC_framePending(self, *args, **kwargs)

    def setMAC_ackRequest(self, *args, **kwargs):
        """setMAC_ackRequest(Aplication_sptr self, bool MAC_ackRequest)"""
        return _tfg_swig.Aplication_sptr_setMAC_ackRequest(self, *args, **kwargs)

    def setMAC_intraPAN(self, *args, **kwargs):
        """setMAC_intraPAN(Aplication_sptr self, bool MAC_intraPAN)"""
        return _tfg_swig.Aplication_sptr_setMAC_intraPAN(self, *args, **kwargs)

    def setMAC_destMode(self, *args, **kwargs):
        """setMAC_destMode(Aplication_sptr self, int MAC_destMode)"""
        return _tfg_swig.Aplication_sptr_setMAC_destMode(self, *args, **kwargs)

    def setMAC_srcMode(self, *args, **kwargs):
        """setMAC_srcMode(Aplication_sptr self, int MAC_srcMode)"""
        return _tfg_swig.Aplication_sptr_setMAC_srcMode(self, *args, **kwargs)

    def setMAC_destPAN(self, *args, **kwargs):
        """setMAC_destPAN(Aplication_sptr self, std::string MAC_destPAN)"""
        return _tfg_swig.Aplication_sptr_setMAC_destPAN(self, *args, **kwargs)

    def setMAC_destAddress(self, *args, **kwargs):
        """setMAC_destAddress(Aplication_sptr self, std::string MAC_destAddress)"""
        return _tfg_swig.Aplication_sptr_setMAC_destAddress(self, *args, **kwargs)

    def setMAC_srcPAN(self, *args, **kwargs):
        """setMAC_srcPAN(Aplication_sptr self, std::string MAC_srcPAN)"""
        return _tfg_swig.Aplication_sptr_setMAC_srcPAN(self, *args, **kwargs)

    def setMAC_srcAddress(self, *args, **kwargs):
        """setMAC_srcAddress(Aplication_sptr self, std::string MAC_srcAddress)"""
        return _tfg_swig.Aplication_sptr_setMAC_srcAddress(self, *args, **kwargs)

    def setNWK_frameType(self, *args, **kwargs):
        """setNWK_frameType(Aplication_sptr self, int NWK_frameType)"""
        return _tfg_swig.Aplication_sptr_setNWK_frameType(self, *args, **kwargs)

    def setNWK_discoverRoute(self, *args, **kwargs):
        """setNWK_discoverRoute(Aplication_sptr self, bool NWK_discoverRoute)"""
        return _tfg_swig.Aplication_sptr_setNWK_discoverRoute(self, *args, **kwargs)

    def setNWK_multicastFlag(self, *args, **kwargs):
        """setNWK_multicastFlag(Aplication_sptr self, bool NWK_multicastFlag)"""
        return _tfg_swig.Aplication_sptr_setNWK_multicastFlag(self, *args, **kwargs)

    def setNWK_security(self, *args, **kwargs):
        """setNWK_security(Aplication_sptr self, bool NWK_security)"""
        return _tfg_swig.Aplication_sptr_setNWK_security(self, *args, **kwargs)

    def setNWK_sourceRoute(self, *args, **kwargs):
        """setNWK_sourceRoute(Aplication_sptr self, bool NWK_sourceRoute)"""
        return _tfg_swig.Aplication_sptr_setNWK_sourceRoute(self, *args, **kwargs)

    def setNWK_hasDestIEEE(self, *args, **kwargs):
        """setNWK_hasDestIEEE(Aplication_sptr self, bool NWK_hasDestIEEE)"""
        return _tfg_swig.Aplication_sptr_setNWK_hasDestIEEE(self, *args, **kwargs)

    def setNWK_hasSrcIEEE(self, *args, **kwargs):
        """setNWK_hasSrcIEEE(Aplication_sptr self, bool NWK_hasSrcIEEE)"""
        return _tfg_swig.Aplication_sptr_setNWK_hasSrcIEEE(self, *args, **kwargs)

    def setNWK_destinationAdd(self, *args, **kwargs):
        """setNWK_destinationAdd(Aplication_sptr self, std::string NWK_destinationAdd)"""
        return _tfg_swig.Aplication_sptr_setNWK_destinationAdd(self, *args, **kwargs)

    def setNWK_sourceAdd(self, *args, **kwargs):
        """setNWK_sourceAdd(Aplication_sptr self, std::string NWK_sourceAdd)"""
        return _tfg_swig.Aplication_sptr_setNWK_sourceAdd(self, *args, **kwargs)

    def setNWK_radius(self, *args, **kwargs):
        """setNWK_radius(Aplication_sptr self, std::string NWK_radius)"""
        return _tfg_swig.Aplication_sptr_setNWK_radius(self, *args, **kwargs)

    def setNWK_destinationIEEE(self, *args, **kwargs):
        """setNWK_destinationIEEE(Aplication_sptr self, std::string NWK_destinationIEEE)"""
        return _tfg_swig.Aplication_sptr_setNWK_destinationIEEE(self, *args, **kwargs)

    def setNWK_sourceIEEE(self, *args, **kwargs):
        """setNWK_sourceIEEE(Aplication_sptr self, std::string NWK_sourceIEEE)"""
        return _tfg_swig.Aplication_sptr_setNWK_sourceIEEE(self, *args, **kwargs)

    def setNWK_multicastMember(self, *args, **kwargs):
        """setNWK_multicastMember(Aplication_sptr self, bool NWK_multicastMember)"""
        return _tfg_swig.Aplication_sptr_setNWK_multicastMember(self, *args, **kwargs)

    def setNWK_multicastRadius(self, *args, **kwargs):
        """setNWK_multicastRadius(Aplication_sptr self, std::string NWK_multicastRadius)"""
        return _tfg_swig.Aplication_sptr_setNWK_multicastRadius(self, *args, **kwargs)

    def setNWK_multicastMaxRadius(self, *args, **kwargs):
        """setNWK_multicastMaxRadius(Aplication_sptr self, std::string NWK_multicastMaxRadius)"""
        return _tfg_swig.Aplication_sptr_setNWK_multicastMaxRadius(self, *args, **kwargs)

    def setNWK_SourceRoute(self, *args, **kwargs):
        """setNWK_SourceRoute(Aplication_sptr self, std::string sourceRoute)"""
        return _tfg_swig.Aplication_sptr_setNWK_SourceRoute(self, *args, **kwargs)

    def setAPS_frameType(self, *args, **kwargs):
        """setAPS_frameType(Aplication_sptr self, int APS_frameType)"""
        return _tfg_swig.Aplication_sptr_setAPS_frameType(self, *args, **kwargs)

    def setAPS_deliveryMode(self, *args, **kwargs):
        """setAPS_deliveryMode(Aplication_sptr self, int APS_deliveryMode)"""
        return _tfg_swig.Aplication_sptr_setAPS_deliveryMode(self, *args, **kwargs)

    def setAPS_ackFormat(self, *args, **kwargs):
        """setAPS_ackFormat(Aplication_sptr self, bool APS_ackFormat)"""
        return _tfg_swig.Aplication_sptr_setAPS_ackFormat(self, *args, **kwargs)

    def setAPS_security(self, *args, **kwargs):
        """setAPS_security(Aplication_sptr self, bool APS_security)"""
        return _tfg_swig.Aplication_sptr_setAPS_security(self, *args, **kwargs)

    def setAPS_ackRequest(self, *args, **kwargs):
        """setAPS_ackRequest(Aplication_sptr self, bool APS_ackRequest)"""
        return _tfg_swig.Aplication_sptr_setAPS_ackRequest(self, *args, **kwargs)

    def setAPS_extHeaderPresent(self, *args, **kwargs):
        """setAPS_extHeaderPresent(Aplication_sptr self, bool APS_extHeaderPresent)"""
        return _tfg_swig.Aplication_sptr_setAPS_extHeaderPresent(self, *args, **kwargs)

    def setAPS_destinationEndpoint(self, *args, **kwargs):
        """setAPS_destinationEndpoint(Aplication_sptr self, std::string APS_destinationEndpoint)"""
        return _tfg_swig.Aplication_sptr_setAPS_destinationEndpoint(self, *args, **kwargs)

    def setAPS_groupAdd(self, *args, **kwargs):
        """setAPS_groupAdd(Aplication_sptr self, std::string APS_groupAdd)"""
        return _tfg_swig.Aplication_sptr_setAPS_groupAdd(self, *args, **kwargs)

    def setAPS_clusterID(self, *args, **kwargs):
        """setAPS_clusterID(Aplication_sptr self, std::string APS_clusterID)"""
        return _tfg_swig.Aplication_sptr_setAPS_clusterID(self, *args, **kwargs)

    def setAPS_profileID(self, *args, **kwargs):
        """setAPS_profileID(Aplication_sptr self, std::string APS_profileID)"""
        return _tfg_swig.Aplication_sptr_setAPS_profileID(self, *args, **kwargs)

    def setAPS_sourceEndpoint(self, *args, **kwargs):
        """setAPS_sourceEndpoint(Aplication_sptr self, std::string APS_sourceEndpoint)"""
        return _tfg_swig.Aplication_sptr_setAPS_sourceEndpoint(self, *args, **kwargs)

    def setAPS_fragmentation(self, *args, **kwargs):
        """setAPS_fragmentation(Aplication_sptr self, int APS_fragmentation)"""
        return _tfg_swig.Aplication_sptr_setAPS_fragmentation(self, *args, **kwargs)

    def setAPS_blockNumber(self, *args, **kwargs):
        """setAPS_blockNumber(Aplication_sptr self, std::string APS_blockNumber)"""
        return _tfg_swig.Aplication_sptr_setAPS_blockNumber(self, *args, **kwargs)

    def setAPS_ackBitfield(self, *args, **kwargs):
        """setAPS_ackBitfield(Aplication_sptr self, std::string APS_ackBitfield)"""
        return _tfg_swig.Aplication_sptr_setAPS_ackBitfield(self, *args, **kwargs)

    def setAPS_commandID(self, *args, **kwargs):
        """setAPS_commandID(Aplication_sptr self, std::string APS_commandID)"""
        return _tfg_swig.Aplication_sptr_setAPS_commandID(self, *args, **kwargs)

    def toggleRedLed(self):
        """toggleRedLed(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_toggleRedLed(self)

    def toggleGreenLed(self):
        """toggleGreenLed(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_toggleGreenLed(self)

    def toggleYellowLed(self):
        """toggleYellowLed(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_toggleYellowLed(self)

    def history(self):
        """history(Aplication_sptr self) -> unsigned int"""
        return _tfg_swig.Aplication_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Aplication_sptr self, int which, int delay)
        declare_sample_delay(Aplication_sptr self, unsigned int delay)
        """
        return _tfg_swig.Aplication_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Aplication_sptr self, int which) -> unsigned int"""
        return _tfg_swig.Aplication_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Aplication_sptr self) -> int"""
        return _tfg_swig.Aplication_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Aplication_sptr self) -> double"""
        return _tfg_swig.Aplication_sptr_relative_rate(self)

    def start(self):
        """start(Aplication_sptr self) -> bool"""
        return _tfg_swig.Aplication_sptr_start(self)

    def stop(self):
        """stop(Aplication_sptr self) -> bool"""
        return _tfg_swig.Aplication_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Aplication_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.Aplication_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Aplication_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.Aplication_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Aplication_sptr self) -> int"""
        return _tfg_swig.Aplication_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Aplication_sptr self, int m)"""
        return _tfg_swig.Aplication_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Aplication_sptr self) -> bool"""
        return _tfg_swig.Aplication_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Aplication_sptr self, int m)"""
        return _tfg_swig.Aplication_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Aplication_sptr self) -> int"""
        return _tfg_swig.Aplication_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Aplication_sptr self, int i) -> long"""
        return _tfg_swig.Aplication_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Aplication_sptr self, long max_output_buffer)
        set_max_output_buffer(Aplication_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.Aplication_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Aplication_sptr self, int i) -> long"""
        return _tfg_swig.Aplication_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Aplication_sptr self, long min_output_buffer)
        set_min_output_buffer(Aplication_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.Aplication_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Aplication_sptr self, int which) -> float
        pc_input_buffers_full(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Aplication_sptr self, int which) -> float
        pc_input_buffers_full_avg(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Aplication_sptr self, int which) -> float
        pc_input_buffers_full_var(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Aplication_sptr self, int which) -> float
        pc_output_buffers_full(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Aplication_sptr self, int which) -> float
        pc_output_buffers_full_avg(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Aplication_sptr self, int which) -> float
        pc_output_buffers_full_var(Aplication_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.Aplication_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Aplication_sptr self) -> float"""
        return _tfg_swig.Aplication_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Aplication_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.Aplication_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Aplication_sptr self)"""
        return _tfg_swig.Aplication_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Aplication_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.Aplication_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Aplication_sptr self) -> int"""
        return _tfg_swig.Aplication_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Aplication_sptr self) -> int"""
        return _tfg_swig.Aplication_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Aplication_sptr self, int priority) -> int"""
        return _tfg_swig.Aplication_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Aplication_sptr self) -> std::string"""
        return _tfg_swig.Aplication_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Aplication_sptr self) -> std::string"""
        return _tfg_swig.Aplication_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Aplication_sptr self) -> io_signature_sptr"""
        return _tfg_swig.Aplication_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Aplication_sptr self) -> io_signature_sptr"""
        return _tfg_swig.Aplication_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Aplication_sptr self) -> long"""
        return _tfg_swig.Aplication_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Aplication_sptr self) -> basic_block_sptr"""
        return _tfg_swig.Aplication_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Aplication_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.Aplication_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Aplication_sptr self) -> std::string"""
        return _tfg_swig.Aplication_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Aplication_sptr self, std::string name)"""
        return _tfg_swig.Aplication_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Aplication_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.Aplication_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Aplication_sptr self) -> swig_int_ptr"""
        return _tfg_swig.Aplication_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Aplication_sptr self) -> swig_int_ptr"""
        return _tfg_swig.Aplication_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Aplication_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.Aplication_sptr_message_subscribers(self, *args, **kwargs)

Aplication_sptr_swigregister = _tfg_swig.Aplication_sptr_swigregister
Aplication_sptr_swigregister(Aplication_sptr)

Aplication_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Aplication = Aplication.make;

class mac(object):
    """
    Constructor Specific Documentation:



    Args:
        debug : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def get_num_packet_errors(self):
        """get_num_packet_errors(mac self) -> int"""
        return _tfg_swig.mac_get_num_packet_errors(self)

    def get_num_packets_received(self):
        """get_num_packets_received(mac self) -> int"""
        return _tfg_swig.mac_get_num_packets_received(self)

    def get_packet_error_ratio(self):
        """get_packet_error_ratio(mac self) -> float"""
        return _tfg_swig.mac_get_packet_error_ratio(self)

    def make(debug=False):
        """
        make(bool debug=False) -> mac_sptr

        Constructor Specific Documentation:



        Args:
            debug : 
        """
        return _tfg_swig.mac_make(debug)

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_mac
    __del__ = lambda self : None;
mac_swigregister = _tfg_swig.mac_swigregister
mac_swigregister(mac)

def mac_make(debug=False):
  """
    mac_make(bool debug=False) -> mac_sptr

    Constructor Specific Documentation:



    Args:
        debug : 
    """
  return _tfg_swig.mac_make(debug)

class mac_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::mac)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::mac)> self) -> mac_sptr
        __init__(boost::shared_ptr<(gr::tfg::mac)> self, mac p) -> mac_sptr
        """
        this = _tfg_swig.new_mac_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(mac_sptr self) -> mac"""
        return _tfg_swig.mac_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_mac_sptr
    __del__ = lambda self : None;
    def get_num_packet_errors(self):
        """get_num_packet_errors(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_get_num_packet_errors(self)

    def get_num_packets_received(self):
        """get_num_packets_received(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_get_num_packets_received(self)

    def get_packet_error_ratio(self):
        """get_packet_error_ratio(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_get_packet_error_ratio(self)

    def make(self, debug=False):
        """
        make(mac_sptr self, bool debug=False) -> mac_sptr

        Constructor Specific Documentation:



        Args:
            debug : 
        """
        return _tfg_swig.mac_sptr_make(self, debug)

    def history(self):
        """history(mac_sptr self) -> unsigned int"""
        return _tfg_swig.mac_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(mac_sptr self, int which, int delay)
        declare_sample_delay(mac_sptr self, unsigned int delay)
        """
        return _tfg_swig.mac_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(mac_sptr self, int which) -> unsigned int"""
        return _tfg_swig.mac_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(mac_sptr self) -> double"""
        return _tfg_swig.mac_sptr_relative_rate(self)

    def start(self):
        """start(mac_sptr self) -> bool"""
        return _tfg_swig.mac_sptr_start(self)

    def stop(self):
        """stop(mac_sptr self) -> bool"""
        return _tfg_swig.mac_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(mac_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.mac_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(mac_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.mac_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(mac_sptr self, int m)"""
        return _tfg_swig.mac_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(mac_sptr self)"""
        return _tfg_swig.mac_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(mac_sptr self) -> bool"""
        return _tfg_swig.mac_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(mac_sptr self, int m)"""
        return _tfg_swig.mac_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(mac_sptr self, int i) -> long"""
        return _tfg_swig.mac_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(mac_sptr self, long max_output_buffer)
        set_max_output_buffer(mac_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.mac_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(mac_sptr self, int i) -> long"""
        return _tfg_swig.mac_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(mac_sptr self, long min_output_buffer)
        set_min_output_buffer(mac_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.mac_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(mac_sptr self, int which) -> float
        pc_input_buffers_full(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(mac_sptr self, int which) -> float
        pc_input_buffers_full_avg(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(mac_sptr self, int which) -> float
        pc_input_buffers_full_var(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(mac_sptr self, int which) -> float
        pc_output_buffers_full(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(mac_sptr self, int which) -> float
        pc_output_buffers_full_avg(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(mac_sptr self, int which) -> float
        pc_output_buffers_full_var(mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.mac_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(mac_sptr self) -> float"""
        return _tfg_swig.mac_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(mac_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.mac_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(mac_sptr self)"""
        return _tfg_swig.mac_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(mac_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.mac_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(mac_sptr self) -> int"""
        return _tfg_swig.mac_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(mac_sptr self, int priority) -> int"""
        return _tfg_swig.mac_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(mac_sptr self) -> std::string"""
        return _tfg_swig.mac_sptr_name(self)

    def symbol_name(self):
        """symbol_name(mac_sptr self) -> std::string"""
        return _tfg_swig.mac_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(mac_sptr self) -> io_signature_sptr"""
        return _tfg_swig.mac_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(mac_sptr self) -> io_signature_sptr"""
        return _tfg_swig.mac_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(mac_sptr self) -> long"""
        return _tfg_swig.mac_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(mac_sptr self) -> basic_block_sptr"""
        return _tfg_swig.mac_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(mac_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.mac_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(mac_sptr self) -> std::string"""
        return _tfg_swig.mac_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(mac_sptr self, std::string name)"""
        return _tfg_swig.mac_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(mac_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.mac_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(mac_sptr self) -> swig_int_ptr"""
        return _tfg_swig.mac_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(mac_sptr self) -> swig_int_ptr"""
        return _tfg_swig.mac_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(mac_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.mac_sptr_message_subscribers(self, *args, **kwargs)

mac_sptr_swigregister = _tfg_swig.mac_sptr_swigregister
mac_sptr_swigregister(mac_sptr)

mac_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
mac = mac.make;

class MAC_stack(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::MAC_stack.

    To avoid accidental use of raw pointers, tfg::MAC_stack's constructor is in a private implementation class. tfg::MAC_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(bool debugInput, bool debugOutput) -> MAC_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::MAC_stack.

        To avoid accidental use of raw pointers, tfg::MAC_stack's constructor is in a private implementation class. tfg::MAC_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.MAC_stack_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_MAC_stack
    __del__ = lambda self : None;
MAC_stack_swigregister = _tfg_swig.MAC_stack_swigregister
MAC_stack_swigregister(MAC_stack)

def MAC_stack_make(*args, **kwargs):
  """
    MAC_stack_make(bool debugInput, bool debugOutput) -> MAC_stack_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::MAC_stack.

    To avoid accidental use of raw pointers, tfg::MAC_stack's constructor is in a private implementation class. tfg::MAC_stack::make is the public interface for creating new instances.

    Args:
        debugInput : 
        debugOutput : 
    """
  return _tfg_swig.MAC_stack_make(*args, **kwargs)

class MAC_stack_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::MAC_stack)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::MAC_stack)> self) -> MAC_stack_sptr
        __init__(boost::shared_ptr<(gr::tfg::MAC_stack)> self, MAC_stack p) -> MAC_stack_sptr
        """
        this = _tfg_swig.new_MAC_stack_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(MAC_stack_sptr self) -> MAC_stack"""
        return _tfg_swig.MAC_stack_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_MAC_stack_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(MAC_stack_sptr self, bool debugInput, bool debugOutput) -> MAC_stack_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::MAC_stack.

        To avoid accidental use of raw pointers, tfg::MAC_stack's constructor is in a private implementation class. tfg::MAC_stack::make is the public interface for creating new instances.

        Args:
            debugInput : 
            debugOutput : 
        """
        return _tfg_swig.MAC_stack_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(MAC_stack_sptr self) -> unsigned int"""
        return _tfg_swig.MAC_stack_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(MAC_stack_sptr self, int which, int delay)
        declare_sample_delay(MAC_stack_sptr self, unsigned int delay)
        """
        return _tfg_swig.MAC_stack_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(MAC_stack_sptr self, int which) -> unsigned int"""
        return _tfg_swig.MAC_stack_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(MAC_stack_sptr self) -> int"""
        return _tfg_swig.MAC_stack_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(MAC_stack_sptr self) -> double"""
        return _tfg_swig.MAC_stack_sptr_relative_rate(self)

    def start(self):
        """start(MAC_stack_sptr self) -> bool"""
        return _tfg_swig.MAC_stack_sptr_start(self)

    def stop(self):
        """stop(MAC_stack_sptr self) -> bool"""
        return _tfg_swig.MAC_stack_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(MAC_stack_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.MAC_stack_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(MAC_stack_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.MAC_stack_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(MAC_stack_sptr self) -> int"""
        return _tfg_swig.MAC_stack_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(MAC_stack_sptr self, int m)"""
        return _tfg_swig.MAC_stack_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(MAC_stack_sptr self)"""
        return _tfg_swig.MAC_stack_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(MAC_stack_sptr self) -> bool"""
        return _tfg_swig.MAC_stack_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(MAC_stack_sptr self, int m)"""
        return _tfg_swig.MAC_stack_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(MAC_stack_sptr self) -> int"""
        return _tfg_swig.MAC_stack_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(MAC_stack_sptr self, int i) -> long"""
        return _tfg_swig.MAC_stack_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(MAC_stack_sptr self, long max_output_buffer)
        set_max_output_buffer(MAC_stack_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.MAC_stack_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(MAC_stack_sptr self, int i) -> long"""
        return _tfg_swig.MAC_stack_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(MAC_stack_sptr self, long min_output_buffer)
        set_min_output_buffer(MAC_stack_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.MAC_stack_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(MAC_stack_sptr self, int which) -> float
        pc_input_buffers_full(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(MAC_stack_sptr self, int which) -> float
        pc_input_buffers_full_avg(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(MAC_stack_sptr self, int which) -> float
        pc_input_buffers_full_var(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(MAC_stack_sptr self, int which) -> float
        pc_output_buffers_full(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(MAC_stack_sptr self, int which) -> float
        pc_output_buffers_full_avg(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(MAC_stack_sptr self, int which) -> float
        pc_output_buffers_full_var(MAC_stack_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.MAC_stack_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(MAC_stack_sptr self) -> float"""
        return _tfg_swig.MAC_stack_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(MAC_stack_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.MAC_stack_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(MAC_stack_sptr self)"""
        return _tfg_swig.MAC_stack_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(MAC_stack_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.MAC_stack_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(MAC_stack_sptr self) -> int"""
        return _tfg_swig.MAC_stack_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(MAC_stack_sptr self) -> int"""
        return _tfg_swig.MAC_stack_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(MAC_stack_sptr self, int priority) -> int"""
        return _tfg_swig.MAC_stack_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(MAC_stack_sptr self) -> std::string"""
        return _tfg_swig.MAC_stack_sptr_name(self)

    def symbol_name(self):
        """symbol_name(MAC_stack_sptr self) -> std::string"""
        return _tfg_swig.MAC_stack_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(MAC_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.MAC_stack_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(MAC_stack_sptr self) -> io_signature_sptr"""
        return _tfg_swig.MAC_stack_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(MAC_stack_sptr self) -> long"""
        return _tfg_swig.MAC_stack_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(MAC_stack_sptr self) -> basic_block_sptr"""
        return _tfg_swig.MAC_stack_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(MAC_stack_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.MAC_stack_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(MAC_stack_sptr self) -> std::string"""
        return _tfg_swig.MAC_stack_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(MAC_stack_sptr self, std::string name)"""
        return _tfg_swig.MAC_stack_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(MAC_stack_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.MAC_stack_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(MAC_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.MAC_stack_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(MAC_stack_sptr self) -> swig_int_ptr"""
        return _tfg_swig.MAC_stack_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(MAC_stack_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.MAC_stack_sptr_message_subscribers(self, *args, **kwargs)

MAC_stack_sptr_swigregister = _tfg_swig.MAC_stack_sptr_swigregister
MAC_stack_sptr_swigregister(MAC_stack_sptr)

MAC_stack_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
MAC_stack = MAC_stack.make;

class test_mac(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_mac.

    To avoid accidental use of raw pointers, tfg::test_mac's constructor is in a private implementation class. tfg::test_mac::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """
        make() -> test_mac_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_mac.

        To avoid accidental use of raw pointers, tfg::test_mac's constructor is in a private implementation class. tfg::test_mac::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_mac_make()

    make = staticmethod(make)
    __swig_destroy__ = _tfg_swig.delete_test_mac
    __del__ = lambda self : None;
test_mac_swigregister = _tfg_swig.test_mac_swigregister
test_mac_swigregister(test_mac)

def test_mac_make():
  """
    test_mac_make() -> test_mac_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::test_mac.

    To avoid accidental use of raw pointers, tfg::test_mac's constructor is in a private implementation class. tfg::test_mac::make is the public interface for creating new instances.
    """
  return _tfg_swig.test_mac_make()

class test_mac_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::test_mac)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::test_mac)> self) -> test_mac_sptr
        __init__(boost::shared_ptr<(gr::tfg::test_mac)> self, test_mac p) -> test_mac_sptr
        """
        this = _tfg_swig.new_test_mac_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(test_mac_sptr self) -> test_mac"""
        return _tfg_swig.test_mac_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_test_mac_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(test_mac_sptr self) -> test_mac_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::test_mac.

        To avoid accidental use of raw pointers, tfg::test_mac's constructor is in a private implementation class. tfg::test_mac::make is the public interface for creating new instances.
        """
        return _tfg_swig.test_mac_sptr_make(self)

    def history(self):
        """history(test_mac_sptr self) -> unsigned int"""
        return _tfg_swig.test_mac_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(test_mac_sptr self, int which, int delay)
        declare_sample_delay(test_mac_sptr self, unsigned int delay)
        """
        return _tfg_swig.test_mac_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(test_mac_sptr self, int which) -> unsigned int"""
        return _tfg_swig.test_mac_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(test_mac_sptr self) -> int"""
        return _tfg_swig.test_mac_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(test_mac_sptr self) -> double"""
        return _tfg_swig.test_mac_sptr_relative_rate(self)

    def start(self):
        """start(test_mac_sptr self) -> bool"""
        return _tfg_swig.test_mac_sptr_start(self)

    def stop(self):
        """stop(test_mac_sptr self) -> bool"""
        return _tfg_swig.test_mac_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(test_mac_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.test_mac_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(test_mac_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.test_mac_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(test_mac_sptr self) -> int"""
        return _tfg_swig.test_mac_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(test_mac_sptr self, int m)"""
        return _tfg_swig.test_mac_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(test_mac_sptr self)"""
        return _tfg_swig.test_mac_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(test_mac_sptr self) -> bool"""
        return _tfg_swig.test_mac_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(test_mac_sptr self, int m)"""
        return _tfg_swig.test_mac_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(test_mac_sptr self) -> int"""
        return _tfg_swig.test_mac_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(test_mac_sptr self, int i) -> long"""
        return _tfg_swig.test_mac_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(test_mac_sptr self, long max_output_buffer)
        set_max_output_buffer(test_mac_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.test_mac_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(test_mac_sptr self, int i) -> long"""
        return _tfg_swig.test_mac_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(test_mac_sptr self, long min_output_buffer)
        set_min_output_buffer(test_mac_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.test_mac_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(test_mac_sptr self, int which) -> float
        pc_input_buffers_full(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(test_mac_sptr self, int which) -> float
        pc_input_buffers_full_avg(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(test_mac_sptr self, int which) -> float
        pc_input_buffers_full_var(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(test_mac_sptr self, int which) -> float
        pc_output_buffers_full(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(test_mac_sptr self, int which) -> float
        pc_output_buffers_full_avg(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(test_mac_sptr self, int which) -> float
        pc_output_buffers_full_var(test_mac_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.test_mac_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(test_mac_sptr self) -> float"""
        return _tfg_swig.test_mac_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(test_mac_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.test_mac_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(test_mac_sptr self)"""
        return _tfg_swig.test_mac_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(test_mac_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.test_mac_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(test_mac_sptr self) -> int"""
        return _tfg_swig.test_mac_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(test_mac_sptr self) -> int"""
        return _tfg_swig.test_mac_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(test_mac_sptr self, int priority) -> int"""
        return _tfg_swig.test_mac_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(test_mac_sptr self) -> std::string"""
        return _tfg_swig.test_mac_sptr_name(self)

    def symbol_name(self):
        """symbol_name(test_mac_sptr self) -> std::string"""
        return _tfg_swig.test_mac_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(test_mac_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_mac_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(test_mac_sptr self) -> io_signature_sptr"""
        return _tfg_swig.test_mac_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(test_mac_sptr self) -> long"""
        return _tfg_swig.test_mac_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(test_mac_sptr self) -> basic_block_sptr"""
        return _tfg_swig.test_mac_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(test_mac_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.test_mac_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(test_mac_sptr self) -> std::string"""
        return _tfg_swig.test_mac_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(test_mac_sptr self, std::string name)"""
        return _tfg_swig.test_mac_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(test_mac_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.test_mac_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(test_mac_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_mac_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(test_mac_sptr self) -> swig_int_ptr"""
        return _tfg_swig.test_mac_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(test_mac_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.test_mac_sptr_message_subscribers(self, *args, **kwargs)

test_mac_sptr_swigregister = _tfg_swig.test_mac_sptr_swigregister
test_mac_sptr_swigregister(test_mac_sptr)

test_mac_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
test_mac = test_mac.make;

class motecontrol(object):
    """
    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::motecontrol.

    To avoid accidental use of raw pointers, tfg::motecontrol's constructor is in a private implementation class. tfg::motecontrol::make is the public interface for creating new instances.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def make():
        """
        make() -> motecontrol_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::motecontrol.

        To avoid accidental use of raw pointers, tfg::motecontrol's constructor is in a private implementation class. tfg::motecontrol::make is the public interface for creating new instances.
        """
        return _tfg_swig.motecontrol_make()

    make = staticmethod(make)
    def toggleRed(self):
        """toggleRed(motecontrol self)"""
        return _tfg_swig.motecontrol_toggleRed(self)

    def toggleGreen(self):
        """toggleGreen(motecontrol self)"""
        return _tfg_swig.motecontrol_toggleGreen(self)

    def toggleYellow(self):
        """toggleYellow(motecontrol self)"""
        return _tfg_swig.motecontrol_toggleYellow(self)

    __swig_destroy__ = _tfg_swig.delete_motecontrol
    __del__ = lambda self : None;
motecontrol_swigregister = _tfg_swig.motecontrol_swigregister
motecontrol_swigregister(motecontrol)

def motecontrol_make():
  """
    motecontrol_make() -> motecontrol_sptr

    <+description of block+>

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of tfg::motecontrol.

    To avoid accidental use of raw pointers, tfg::motecontrol's constructor is in a private implementation class. tfg::motecontrol::make is the public interface for creating new instances.
    """
  return _tfg_swig.motecontrol_make()

class motecontrol_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::tfg::motecontrol)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::tfg::motecontrol)> self) -> motecontrol_sptr
        __init__(boost::shared_ptr<(gr::tfg::motecontrol)> self, motecontrol p) -> motecontrol_sptr
        """
        this = _tfg_swig.new_motecontrol_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(motecontrol_sptr self) -> motecontrol"""
        return _tfg_swig.motecontrol_sptr___deref__(self)

    __swig_destroy__ = _tfg_swig.delete_motecontrol_sptr
    __del__ = lambda self : None;
    def make(self):
        """
        make(motecontrol_sptr self) -> motecontrol_sptr

        <+description of block+>

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of tfg::motecontrol.

        To avoid accidental use of raw pointers, tfg::motecontrol's constructor is in a private implementation class. tfg::motecontrol::make is the public interface for creating new instances.
        """
        return _tfg_swig.motecontrol_sptr_make(self)

    def toggleRed(self):
        """toggleRed(motecontrol_sptr self)"""
        return _tfg_swig.motecontrol_sptr_toggleRed(self)

    def toggleGreen(self):
        """toggleGreen(motecontrol_sptr self)"""
        return _tfg_swig.motecontrol_sptr_toggleGreen(self)

    def toggleYellow(self):
        """toggleYellow(motecontrol_sptr self)"""
        return _tfg_swig.motecontrol_sptr_toggleYellow(self)

    def history(self):
        """history(motecontrol_sptr self) -> unsigned int"""
        return _tfg_swig.motecontrol_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(motecontrol_sptr self, int which, int delay)
        declare_sample_delay(motecontrol_sptr self, unsigned int delay)
        """
        return _tfg_swig.motecontrol_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(motecontrol_sptr self, int which) -> unsigned int"""
        return _tfg_swig.motecontrol_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(motecontrol_sptr self) -> int"""
        return _tfg_swig.motecontrol_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(motecontrol_sptr self) -> double"""
        return _tfg_swig.motecontrol_sptr_relative_rate(self)

    def start(self):
        """start(motecontrol_sptr self) -> bool"""
        return _tfg_swig.motecontrol_sptr_start(self)

    def stop(self):
        """stop(motecontrol_sptr self) -> bool"""
        return _tfg_swig.motecontrol_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(motecontrol_sptr self, unsigned int which_input) -> uint64_t"""
        return _tfg_swig.motecontrol_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(motecontrol_sptr self, unsigned int which_output) -> uint64_t"""
        return _tfg_swig.motecontrol_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(motecontrol_sptr self) -> int"""
        return _tfg_swig.motecontrol_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(motecontrol_sptr self, int m)"""
        return _tfg_swig.motecontrol_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(motecontrol_sptr self)"""
        return _tfg_swig.motecontrol_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(motecontrol_sptr self) -> bool"""
        return _tfg_swig.motecontrol_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(motecontrol_sptr self, int m)"""
        return _tfg_swig.motecontrol_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(motecontrol_sptr self) -> int"""
        return _tfg_swig.motecontrol_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(motecontrol_sptr self, int i) -> long"""
        return _tfg_swig.motecontrol_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(motecontrol_sptr self, long max_output_buffer)
        set_max_output_buffer(motecontrol_sptr self, int port, long max_output_buffer)
        """
        return _tfg_swig.motecontrol_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(motecontrol_sptr self, int i) -> long"""
        return _tfg_swig.motecontrol_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(motecontrol_sptr self, long min_output_buffer)
        set_min_output_buffer(motecontrol_sptr self, int port, long min_output_buffer)
        """
        return _tfg_swig.motecontrol_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(motecontrol_sptr self, int which) -> float
        pc_input_buffers_full(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(motecontrol_sptr self, int which) -> float
        pc_input_buffers_full_avg(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(motecontrol_sptr self, int which) -> float
        pc_input_buffers_full_var(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(motecontrol_sptr self, int which) -> float
        pc_output_buffers_full(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(motecontrol_sptr self, int which) -> float
        pc_output_buffers_full_avg(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(motecontrol_sptr self, int which) -> float
        pc_output_buffers_full_var(motecontrol_sptr self) -> pmt_vector_float
        """
        return _tfg_swig.motecontrol_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(motecontrol_sptr self) -> float"""
        return _tfg_swig.motecontrol_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(motecontrol_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _tfg_swig.motecontrol_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(motecontrol_sptr self)"""
        return _tfg_swig.motecontrol_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(motecontrol_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _tfg_swig.motecontrol_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(motecontrol_sptr self) -> int"""
        return _tfg_swig.motecontrol_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(motecontrol_sptr self) -> int"""
        return _tfg_swig.motecontrol_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(motecontrol_sptr self, int priority) -> int"""
        return _tfg_swig.motecontrol_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(motecontrol_sptr self) -> std::string"""
        return _tfg_swig.motecontrol_sptr_name(self)

    def symbol_name(self):
        """symbol_name(motecontrol_sptr self) -> std::string"""
        return _tfg_swig.motecontrol_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(motecontrol_sptr self) -> io_signature_sptr"""
        return _tfg_swig.motecontrol_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(motecontrol_sptr self) -> io_signature_sptr"""
        return _tfg_swig.motecontrol_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(motecontrol_sptr self) -> long"""
        return _tfg_swig.motecontrol_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(motecontrol_sptr self) -> basic_block_sptr"""
        return _tfg_swig.motecontrol_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(motecontrol_sptr self, int ninputs, int noutputs) -> bool"""
        return _tfg_swig.motecontrol_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(motecontrol_sptr self) -> std::string"""
        return _tfg_swig.motecontrol_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(motecontrol_sptr self, std::string name)"""
        return _tfg_swig.motecontrol_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(motecontrol_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _tfg_swig.motecontrol_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(motecontrol_sptr self) -> swig_int_ptr"""
        return _tfg_swig.motecontrol_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(motecontrol_sptr self) -> swig_int_ptr"""
        return _tfg_swig.motecontrol_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(motecontrol_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _tfg_swig.motecontrol_sptr_message_subscribers(self, *args, **kwargs)

motecontrol_sptr_swigregister = _tfg_swig.motecontrol_sptr_swigregister
motecontrol_sptr_swigregister(motecontrol_sptr)

motecontrol_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
motecontrol = motecontrol.make;



